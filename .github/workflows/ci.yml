name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  security-events: write

jobs:
  lint-test:
    name: Lint & Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Ruff Lint
        run: ruff check .

      - name: Ruff Format (diff only)
        run: ruff format --check .

      - name: Run Tests with Coverage
        run: |
          # Historial umbrales: 73% -> 75% -> ahora 77% (cobertura local ~77.4%).
          # Pr칩ximo objetivo: 80% tras refactor modular de models.py y m치s ramas en utils/admin.
          pytest --cov --cov-report=xml --cov-fail-under=77 -q

      - name: Coverage Summary
        if: always()
        run: |
          # Generar reporte legible y anexarlo al summary del workflow
          coverage report -m > coverage.txt || true
          echo '## Cobertura' >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          cat coverage.txt >> "$GITHUB_STEP_SUMMARY" || true
          echo '```' >> "$GITHUB_STEP_SUMMARY"

      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

  dependency-audit:
    name: Dependencias (pip-audit)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install runtime deps only
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pip-audit==2.7.3

      - name: Ejecutar pip-audit
        run: pip-audit -f json -o pip-audit.json || exit_code=$?; if [ "$exit_code" = "1" ]; then echo "Vulnerabilidades encontradas"; else exit $exit_code; fi

      - name: Publicar reporte pip-audit
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit.json

      - name: Instalar Bandit
        run: pip install bandit==1.7.10

      - name: Bandit (an치lisis est치tico seguridad)
        run: |
          bandit -q -r core -f json -o bandit.json || true
          echo '## Bandit' >> "$GITHUB_STEP_SUMMARY"
          echo 'Reporte Bandit (JSON adjunto como artefacto).' >> "$GITHUB_STEP_SUMMARY"

      - name: Publicar reporte Bandit
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit.json


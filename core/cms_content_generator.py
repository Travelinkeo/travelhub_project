
import json
from typing import Any

from core.gemini import (
    generate_content,  # Suponiendo que la funci√≥n de llamada a Gemini est√° en core.gemini
)


def generate_promotional_content(promotion_data: dict[str, Any]) -> dict[str, Any]:
    """
    Recibe un JSON con datos de una promoci√≥n, construye un prompt creativo
    y llama a la API de Gemini para generar contenido para redes sociales.

    Args:
        promotion_data: Un diccionario con los detalles de la promoci√≥n extra√≠dos por la IA.
                        Ej: {"destino": "Tokio, Jap√≥n", "precio": "1200 USD", "fechas": "15-30 de Octubre"}

    Returns:
        Un diccionario con el contenido generado para cada plataforma,
        o un diccionario de error si la respuesta no pudo ser procesada.
    """
    # Convertir el diccionario de datos de la promoci√≥n a un string JSON formateado
    promotion_json_str = json.dumps(promotion_data, indent=2, ensure_ascii=False)

    # 2. Dise√±o del prompt detallado para la segunda llamada a Gemini
    prompt = f"""
    Eres un experto en marketing digital y social media manager para una agencia de viajes de primer nivel.
    Tu tarea es tomar los siguientes datos de una promoci√≥n y convertirlos en contenido atractivo y viral.

    **Datos de la Promoci√≥n:**
    ```json
    {promotion_json_str}
    ```

    **Instrucciones:**
    A partir de los datos proporcionados, genera tres piezas de contenido distintas.
    Tu respuesta DEBE ser un √∫nico objeto JSON v√°lido, sin texto introductorio ni explicaciones adicionales,
    con las siguientes tres claves: "whatsapp_status", "instagram_post", "instagram_reel_idea".

    1.  **whatsapp_status**: Crea un texto muy corto, llamativo y emocionante para un estado de WhatsApp. Debe generar curiosidad y urgencia. M√°ximo 25 palabras.
    2.  **instagram_post**: Escribe una descripci√≥n atractiva para un post de Instagram. Debe ser inspiradora, incluir un llamado a la acci√≥n claro (ej: "¬°Reserva ahora en el link de nuestra bio!") y finalizar con exactamente 5 hashtags relevantes y populares.
    3.  **instagram_reel_idea**: Prop√≥n un guion simple o una idea conceptual para un Reel de Instagram de 15 segundos. Describe las escenas r√°pidas, el texto que aparecer√≠a en pantalla y sugiere un tipo de m√∫sica o audio en tendencia.

    **Ejemplo de formato de respuesta JSON esperado:**
    {{
        "whatsapp_status": "¬°No te lo vas a creer! üò± Prepara tus maletas para [Destino] a un precio de locura. ¬°Oferta por tiempo limitado!",
        "instagram_post": "El viaje de tus sue√±os a [Destino] te est√° esperando. ‚ú® Imagina caminar por sus calles, probar su comida y vivir una aventura inolvidable. ¬°Todo por solo [Precio]! ‚úàÔ∏è ¬øEst√°s listo? ¬°Reserva ahora en el link de nuestra bio! #Viajes #Promocion #OfertaDeViaje #[Destino] #Aventura",
        "instagram_reel_idea": {{
            "concepto": "Montaje r√°pido de 3 clips de video del destino.",
            "escena_1": "Video a√©reo de [Destino] (2 seg). Texto en pantalla: '¬øSue√±as con...'",
            "escena_2": "Clip de comida local o actividad cultural (3 seg). Texto: '...esto?'",
            "escena_3": "Clip de un paisaje ic√≥nico al atardecer (3 seg). Texto: '¬°Hazlo realidad!'",
            "escena_final": "Plano con el logo de la agencia (2 seg). Texto: '[Destino] desde [Precio]. Link en la bio.'",
            "audio_sugerido": "Una canci√≥n pop en tendencia, ritmo r√°pido y alegre."
        }}
    }}
    """

    try:
        # 3. Llamada a la API de Gemini
        response_text = generate_content(prompt)

        # Limpiar la respuesta para asegurar que sea un JSON v√°lido
        # A veces, la API puede devolver el JSON envuelto en ```json ... ```
        if response_text.strip().startswith("```json"):
            response_text = response_text.strip()[7:-3].strip()

        # 4. Parsear la respuesta y devolverla
        generated_content = json.loads(response_text)
        return generated_content

    except json.JSONDecodeError:
        return {
            "error": "Error al decodificar la respuesta JSON de la API.",
            "raw_response": response_text
        }
    except Exception as e:
        return {
            "error": f"Ocurri√≥ un error inesperado: {str(e)}"
        }

# Ejemplo de uso (para pruebas)
if __name__ == '__main__':
    # 1. Datos de ejemplo que simulan la primera extracci√≥n de Gemini
    sample_promotion = {
        "destino": "Kioto, Jap√≥n",
        "aerolinea": "Japan Airlines",
        "precio": "950 USD",
        "fechas_vuelo": "del 10 al 25 de noviembre, 2025",
        "hotel_incluido": "Ryokan con vistas al jard√≠n Zen",
        "oferta_especial": "Incluye tour guiado al Templo Fushimi Inari"
    }

    # Llamar a la funci√≥n para generar el contenido creativo
    creative_content = generate_promotional_content(sample_promotion)

    # Imprimir el resultado de forma legible
    print(json.dumps(creative_content, indent=4, ensure_ascii=False))

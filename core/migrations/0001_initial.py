# Generated by Django 5.2.6 on 2025-09-18 15:47

import core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ArticuloBlog",
            fields=[
                (
                    "id_articulo",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Artículo"
                    ),
                ),
                (
                    "titulo",
                    models.CharField(
                        max_length=255,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Título del Artículo",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="Slug"),
                ),
                ("contenido", models.TextField(verbose_name="Contenido del Artículo")),
                (
                    "extracto",
                    models.TextField(blank=True, verbose_name="Extracto o Resumen"),
                ),
                (
                    "fecha_publicacion",
                    models.DateTimeField(
                        blank=True,
                        help_text="Si está en blanco y el estado es 'Publicado', se usará la fecha actual.",
                        null=True,
                        verbose_name="Fecha de Publicación",
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_modificacion", models.DateTimeField(auto_now=True)),
                (
                    "imagen_destacada",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="cms/blog/",
                        verbose_name="Imagen Destacada",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PUB", "Publicado"),
                            ("BOR", "Borrador"),
                            ("ARC", "Archivado"),
                        ],
                        default="BOR",
                        max_length=3,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "permitir_comentarios",
                    models.BooleanField(
                        default=True, verbose_name="Permitir Comentarios"
                    ),
                ),
                (
                    "meta_titulo",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Meta Título (SEO)"
                    ),
                ),
                (
                    "meta_descripcion",
                    models.TextField(blank=True, verbose_name="Meta Descripción (SEO)"),
                ),
                (
                    "fuente",
                    models.CharField(
                        blank=True,
                        help_text="Origen de la información, ej: email del proveedor.",
                        max_length=255,
                        null=True,
                        verbose_name="Fuente de la Información",
                    ),
                ),
                (
                    "categoria_conocimiento",
                    models.CharField(
                        blank=True,
                        help_text="Categoría para la base de conocimiento interna.",
                        max_length=100,
                        null=True,
                        verbose_name="Categoría de Conocimiento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Artículo de Blog",
                "verbose_name_plural": "Artículos de Blog",
                "ordering": ["-fecha_publicacion", "-fecha_creacion"],
            },
        ),
        migrations.CreateModel(
            name="AsientoContable",
            fields=[
                (
                    "id_asiento",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Asiento"
                    ),
                ),
                (
                    "numero_asiento",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        unique=True,
                        verbose_name="Número de Asiento",
                    ),
                ),
                (
                    "fecha_contable",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Fecha Contable"
                    ),
                ),
                (
                    "descripcion_general",
                    models.CharField(
                        max_length=255, verbose_name="Descripción General"
                    ),
                ),
                (
                    "tipo_asiento",
                    models.CharField(
                        choices=[
                            ("DIA", "Diario"),
                            ("COM", "Compras"),
                            ("VEN", "Ventas"),
                            ("NOM", "Nómina"),
                            ("APE", "Apertura"),
                            ("CIE", "Cierre"),
                            ("AJU", "Ajuste"),
                        ],
                        default="DIA",
                        max_length=3,
                        verbose_name="Tipo de Asiento",
                    ),
                ),
                (
                    "referencia_documento",
                    models.CharField(
                        blank=True,
                        help_text="Ej: Factura #, Reserva #",
                        max_length=100,
                        null=True,
                        verbose_name="Referencia Documento",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("BOR", "Borrador"),
                            ("CON", "Contabilizado"),
                            ("ANU", "Anulado"),
                        ],
                        default="BOR",
                        max_length=3,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "tasa_cambio_aplicada",
                    models.DecimalField(
                        decimal_places=8,
                        default=1.0,
                        help_text="Respecto a la moneda local, si aplica.",
                        max_digits=18,
                        verbose_name="Tasa de Cambio Aplicada",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "total_debe",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=15,
                        verbose_name="Total Debe",
                    ),
                ),
                (
                    "total_haber",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=15,
                        verbose_name="Total Haber",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asiento Contable",
                "verbose_name_plural": "Asientos Contables",
                "ordering": ["-fecha_contable", "-numero_asiento"],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id_audit_log",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Audit Log"
                    ),
                ),
                (
                    "modelo",
                    models.CharField(
                        db_index=True, max_length=120, verbose_name="Modelo"
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        db_index=True, max_length=120, verbose_name="Object ID"
                    ),
                ),
                (
                    "accion",
                    models.CharField(
                        choices=[
                            ("CREATE", "Creación"),
                            ("UPDATE", "Actualización"),
                            ("DELETE", "Eliminación"),
                            ("STATE", "Cambio de Estado"),
                        ],
                        max_length=10,
                        verbose_name="Acción",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True, null=True, verbose_name="Descripción / Resumen"
                    ),
                ),
                (
                    "datos_previos",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Datos Previos"
                    ),
                ),
                (
                    "datos_nuevos",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Datos Nuevos"
                    ),
                ),
                (
                    "metadata_extra",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Metadata Extra"
                    ),
                ),
                (
                    "creado",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Creado"
                    ),
                ),
                (
                    "previous_hash",
                    models.CharField(
                        blank=True, db_index=True, max_length=64, null=True
                    ),
                ),
                (
                    "record_hash",
                    models.CharField(
                        blank=True, db_index=True, max_length=64, null=True, unique=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Auditoría",
                "verbose_name_plural": "Logs de Auditoría",
                "ordering": ["-creado"],
            },
        ),
        migrations.CreateModel(
            name="BoletoImportado",
            fields=[
                (
                    "id_boleto_importado",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Boleto Importado",
                    ),
                ),
                (
                    "archivo_boleto",
                    models.FileField(
                        help_text="Suba el archivo del boleto en formato PDF, TXT o EML (máx 5MB).",
                        upload_to="boletos_importados/%Y/%m/",
                        validators=[
                            core.validators.validate_file_size,
                            core.validators.validate_file_extension,
                            core.validators.antivirus_hook,
                        ],
                        verbose_name="Archivo del Boleto (.pdf, .txt, .eml)",
                    ),
                ),
                (
                    "fecha_subida",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Subida"
                    ),
                ),
                (
                    "formato_detectado",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PDF_KIU", "PDF (KIU)"),
                            ("PDF_SAB", "PDF (Sabre)"),
                            ("PDF_AMA", "PDF (Amadeus)"),
                            ("TXT_KIU", "TXT (KIU)"),
                            ("TXT_SAB", "TXT (Sabre)"),
                            ("TXT_AMA", "TXT (Amadeus)"),
                            ("EML_KIU", "EML (KIU)"),
                            ("EML_GEN", "EML (General)"),
                            ("OTR", "Otro/Desconocido"),
                            ("ERR", "Error de Formato"),
                        ],
                        default="OTR",
                        max_length=10,
                        verbose_name="Formato Detectado",
                    ),
                ),
                (
                    "datos_parseados",
                    models.JSONField(
                        blank=True,
                        help_text="Información extraída del boleto en formato JSON.",
                        null=True,
                        verbose_name="Datos Parseados",
                    ),
                ),
                (
                    "estado_parseo",
                    models.CharField(
                        choices=[
                            ("PEN", "Pendiente de Parseo"),
                            ("PRO", "En Proceso"),
                            ("COM", "Parseo Completado"),
                            ("ERR", "Error en Parseo"),
                            ("NAP", "No Aplica Parseo"),
                        ],
                        default="PEN",
                        max_length=3,
                        verbose_name="Estado del Parseo",
                    ),
                ),
                (
                    "log_parseo",
                    models.TextField(
                        blank=True, null=True, verbose_name="Log del Parseo"
                    ),
                ),
                (
                    "numero_boleto",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Número de Boleto",
                    ),
                ),
                (
                    "nombre_pasajero_completo",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nombre Completo Pasajero (Original)",
                    ),
                ),
                (
                    "nombre_pasajero_procesado",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nombre Pasajero (Procesado)",
                    ),
                ),
                (
                    "ruta_vuelo",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Ruta del Vuelo (Itinerario)",
                    ),
                ),
                (
                    "fecha_emision_boleto",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de Emisión del Boleto",
                    ),
                ),
                (
                    "aerolinea_emisora",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Aerolínea Emisora",
                    ),
                ),
                (
                    "direccion_aerolinea",
                    models.TextField(
                        blank=True, null=True, verbose_name="Dirección Aerolínea"
                    ),
                ),
                (
                    "agente_emisor",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Agente Emisor",
                    ),
                ),
                (
                    "foid_pasajero",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="FOID/D.Identidad Pasajero",
                    ),
                ),
                (
                    "localizador_pnr",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Localizador (PNR)",
                    ),
                ),
                (
                    "tarifa_base",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Tarifa Base",
                    ),
                ),
                (
                    "impuestos_descripcion",
                    models.TextField(
                        blank=True, null=True, verbose_name="Descripción Impuestos"
                    ),
                ),
                (
                    "impuestos_total_calculado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Total Impuestos (Calculado)",
                    ),
                ),
                (
                    "total_boleto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Total del Boleto",
                    ),
                ),
                (
                    "exchange_monto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Monto de exchange o diferencial de cambio asociado al boleto.",
                        max_digits=10,
                        null=True,
                        verbose_name="Exchange",
                    ),
                ),
                (
                    "void_monto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Monto asociado a VOID (penalidad / reembolso negativo).",
                        max_digits=10,
                        null=True,
                        verbose_name="Void / Penalidad",
                    ),
                ),
                (
                    "fee_servicio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Fee cobrado por la agencia por gestión del boleto.",
                        max_digits=10,
                        null=True,
                        verbose_name="Fee de Servicio",
                    ),
                ),
                (
                    "igtf_monto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Impuesto a las Grandes Transacciones Financieras u otras retenciones locales.",
                        max_digits=10,
                        null=True,
                        verbose_name="IGTF",
                    ),
                ),
                (
                    "comision_agencia",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Comisión propia de la agencia respecto al boleto.",
                        max_digits=10,
                        null=True,
                        verbose_name="Comisión Agencia",
                    ),
                ),
                (
                    "archivo_pdf_generado",
                    models.FileField(
                        blank=True,
                        help_text="El archivo PDF del boleto unificado, generado automáticamente.",
                        null=True,
                        upload_to="boletos_generados/%Y/%m/",
                        verbose_name="PDF Unificado Generado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Boleto Importado",
                "verbose_name_plural": "Boletos Importados",
                "ordering": ["-fecha_subida"],
            },
        ),
        migrations.CreateModel(
            name="CircuitoTuristico",
            fields=[
                (
                    "id_circuito",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Circuito"
                    ),
                ),
                (
                    "nombre_circuito",
                    models.CharField(max_length=255, verbose_name="Nombre Circuito"),
                ),
                (
                    "dias_total",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Días Totales"
                    ),
                ),
                (
                    "fecha_inicio",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha Inicio"
                    ),
                ),
                (
                    "fecha_fin",
                    models.DateField(blank=True, null=True, verbose_name="Fecha Fin"),
                ),
                (
                    "descripcion_general",
                    models.TextField(
                        blank=True, null=True, verbose_name="Descripción General"
                    ),
                ),
                (
                    "incluye",
                    models.TextField(blank=True, null=True, verbose_name="Incluye"),
                ),
                (
                    "no_incluye",
                    models.TextField(blank=True, null=True, verbose_name="No Incluye"),
                ),
                (
                    "costo_neto_estimado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Costo Neto Estimado",
                    ),
                ),
                (
                    "precio_venta_estimado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Precio Venta Estimado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Circuito Turístico",
                "verbose_name_plural": "Circuitos Turísticos",
                "ordering": ["-fecha_inicio"],
            },
        ),
        migrations.CreateModel(
            name="Ciudad",
            fields=[
                (
                    "id_ciudad",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Ciudad"
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=100,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombre de la Ciudad",
                    ),
                ),
                (
                    "region_estado",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Región/Estado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ciudad",
                "verbose_name_plural": "Ciudades",
                "ordering": ["pais__nombre", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="ComunicacionProveedor",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("remitente", models.CharField(max_length=255)),
                ("asunto", models.CharField(max_length=500)),
                ("fecha_recepcion", models.DateTimeField(auto_now_add=True)),
                (
                    "categoria",
                    models.CharField(
                        choices=[
                            ("URG", "Notificación Urgente"),
                            ("INF", "Información General"),
                            ("PRO", "Promoción"),
                            ("OTR", "Otro"),
                        ],
                        default="OTR",
                        max_length=3,
                    ),
                ),
                (
                    "contenido_extraido",
                    models.JSONField(
                        blank=True,
                        help_text="El JSON estructurado devuelto por el análisis de Gemini.",
                        null=True,
                        verbose_name="Contenido Extraído por IA",
                    ),
                ),
                (
                    "cuerpo_completo",
                    models.TextField(
                        blank=True, verbose_name="Cuerpo completo del correo"
                    ),
                ),
                (
                    "whatsapp_status",
                    models.TextField(
                        blank=True,
                        help_text="Texto corto y llamativo para WhatsApp generado por IA.",
                        null=True,
                        verbose_name="Contenido para Estado de WhatsApp",
                    ),
                ),
                (
                    "instagram_post",
                    models.TextField(
                        blank=True,
                        help_text="Descripción para Instagram con hashtags generada por IA.",
                        null=True,
                        verbose_name="Contenido para Post de Instagram",
                    ),
                ),
                (
                    "instagram_reel_idea",
                    models.JSONField(
                        blank=True,
                        help_text="Guion o concepto para un Reel de 15s generado por IA.",
                        null=True,
                        verbose_name="Idea para Reel de Instagram",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comunicación de Proveedor",
                "verbose_name_plural": "Comunicaciones de Proveedores",
                "ordering": ["-fecha_recepcion"],
            },
        ),
        migrations.CreateModel(
            name="FormularioContactoCMS",
            fields=[
                (
                    "id_envio",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Envío"
                    ),
                ),
                (
                    "nombre_completo",
                    models.CharField(max_length=150, verbose_name="Nombre Completo"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, verbose_name="Correo Electrónico"
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="Teléfono"
                    ),
                ),
                (
                    "asunto",
                    models.CharField(blank=True, max_length=200, verbose_name="Asunto"),
                ),
                ("mensaje", models.TextField(verbose_name="Mensaje")),
                (
                    "fecha_envio",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Envío"
                    ),
                ),
                (
                    "ip_origen",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Dirección IP de Origen"
                    ),
                ),
                (
                    "estado_lectura",
                    models.CharField(
                        choices=[
                            ("NOL", "No Leído"),
                            ("LEI", "Leído"),
                            ("PRO", "Procesado/Respondido"),
                            ("SPM", "Spam"),
                        ],
                        default="NOL",
                        max_length=3,
                        verbose_name="Estado de Lectura",
                    ),
                ),
            ],
            options={
                "verbose_name": "Envío de Formulario de Contacto",
                "verbose_name_plural": "Envíos de Formularios de Contacto",
                "ordering": ["-fecha_envio"],
            },
        ),
        migrations.CreateModel(
            name="Moneda",
            fields=[
                (
                    "id_moneda",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Moneda"
                    ),
                ),
                (
                    "codigo_iso",
                    models.CharField(
                        help_text="Código ISO 4217 de la moneda (ej. USD, EUR, VEF).",
                        max_length=3,
                        unique=True,
                        verbose_name="Código ISO",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombre de la Moneda",
                    ),
                ),
                (
                    "simbolo",
                    models.CharField(
                        blank=True, max_length=5, null=True, verbose_name="Símbolo"
                    ),
                ),
                (
                    "es_moneda_local",
                    models.BooleanField(
                        default=False,
                        help_text="Marcar si esta es la moneda principal de la agencia.",
                        verbose_name="Es Moneda Local",
                    ),
                ),
            ],
            options={
                "verbose_name": "Moneda",
                "verbose_name_plural": "Monedas",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="PaginaCMS",
            fields=[
                (
                    "id_pagina_cms",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Página CMS"
                    ),
                ),
                (
                    "titulo",
                    models.CharField(
                        max_length=200,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Título de la Página",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Se genera automáticamente si se deja vacío, o se puede especificar.",
                        max_length=255,
                        unique=True,
                        verbose_name="Slug (URL amigable)",
                    ),
                ),
                (
                    "contenido",
                    models.TextField(
                        blank=True, verbose_name="Contenido HTML/Markdown"
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_modificacion", models.DateTimeField(auto_now=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PUB", "Publicado"),
                            ("BOR", "Borrador"),
                            ("ARC", "Archivado"),
                        ],
                        default="BOR",
                        max_length=3,
                        verbose_name="Estado de Publicación",
                    ),
                ),
                (
                    "plantilla",
                    models.CharField(
                        blank=True,
                        help_text="Ej: 'cms/pagina_detalle.html'. Si está vacío, usa una por defecto.",
                        max_length=100,
                        null=True,
                        verbose_name="Plantilla Django a usar",
                    ),
                ),
                (
                    "meta_titulo",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Meta Título (SEO)"
                    ),
                ),
                (
                    "meta_descripcion",
                    models.TextField(blank=True, verbose_name="Meta Descripción (SEO)"),
                ),
            ],
            options={
                "verbose_name": "Página CMS",
                "verbose_name_plural": "Páginas CMS",
                "ordering": ["titulo"],
            },
        ),
        migrations.CreateModel(
            name="Pais",
            fields=[
                (
                    "id_pais",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID País"
                    ),
                ),
                (
                    "codigo_iso_2",
                    models.CharField(
                        help_text="Código ISO 3166-1 alfa-2 del país.",
                        max_length=2,
                        unique=True,
                        verbose_name="Código ISO 2",
                    ),
                ),
                (
                    "codigo_iso_3",
                    models.CharField(
                        help_text="Código ISO 3166-1 alfa-3 del país.",
                        max_length=3,
                        unique=True,
                        verbose_name="Código ISO 3",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombre del País",
                    ),
                ),
            ],
            options={
                "verbose_name": "País",
                "verbose_name_plural": "Países",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="PaqueteAereo",
            fields=[
                (
                    "id_paquete_aereo",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Paquete Aéreo",
                    ),
                ),
                (
                    "nombre_paquete",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Nombre Paquete",
                    ),
                ),
                (
                    "incluye_vuelos",
                    models.BooleanField(default=True, verbose_name="Incluye Vuelos"),
                ),
                (
                    "incluye_hotel",
                    models.BooleanField(default=False, verbose_name="Incluye Hotel"),
                ),
                (
                    "noches",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Noches"
                    ),
                ),
                (
                    "pasajeros",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Pasajeros"
                    ),
                ),
                (
                    "resumen_componentes",
                    models.JSONField(
                        blank=True,
                        help_text="Estructura agregada de vuelos/hoteles/otros.",
                        null=True,
                        verbose_name="Resumen Componentes",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, null=True, verbose_name="Observaciones"
                    ),
                ),
                (
                    "costo_neto_estimado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Costo Neto Estimado",
                    ),
                ),
                (
                    "precio_venta_estimado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Precio Venta Estimado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Paquete Aéreo",
                "verbose_name_plural": "Paquetes Aéreos",
                "ordering": ["-id_paquete_aereo"],
            },
        ),
        migrations.CreateModel(
            name="Testimonio",
            fields=[
                (
                    "id_testimonio",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Testimonio"
                    ),
                ),
                (
                    "nombre_cliente",
                    models.CharField(
                        max_length=150,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombre del Cliente",
                    ),
                ),
                (
                    "texto_testimonio",
                    models.TextField(
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Texto del Testimonio",
                    ),
                ),
                (
                    "calificacion",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        null=True,
                        verbose_name="Calificación (1-5)",
                    ),
                ),
                (
                    "fecha_recibido",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Fecha Recibido/Viaje",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PEN", "Pendiente de Aprobación"),
                            ("APR", "Aprobado y Visible"),
                            ("REC", "Rechazado"),
                        ],
                        default="PEN",
                        max_length=3,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "origen",
                    models.CharField(
                        blank=True,
                        help_text="Ej: Formulario web, Email, Red social",
                        max_length=50,
                        verbose_name="Origen del Testimonio",
                    ),
                ),
                (
                    "sentimiento",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("POS", "Positivo"),
                            ("NEU", "Neutral"),
                            ("NEG", "Negativo"),
                        ],
                        editable=False,
                        max_length=3,
                        null=True,
                        verbose_name="Sentimiento (IA)",
                    ),
                ),
                (
                    "puntuacion_ia",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        editable=False,
                        help_text="Puntuación de 1 a 10 generada por IA.",
                        null=True,
                        verbose_name="Puntuación (IA, 1-10)",
                    ),
                ),
                (
                    "temas_clave",
                    models.JSONField(
                        blank=True,
                        editable=False,
                        help_text="Lista de temas o palabras clave extraídas por la IA.",
                        null=True,
                        verbose_name="Temas Clave (IA)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Testimonio",
                "verbose_name_plural": "Testimonios",
                "ordering": ["-fecha_recibido"],
            },
        ),
        migrations.CreateModel(
            name="VentaParseMetadata",
            fields=[
                (
                    "id_metadata",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Metadata Parseo",
                    ),
                ),
                (
                    "fuente",
                    models.CharField(
                        blank=True,
                        help_text="Ej: SABRE, KIU, AMADEUS, IMPORT_MANUAL",
                        max_length=50,
                        null=True,
                        verbose_name="Fuente / Origen",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Moneda"
                    ),
                ),
                (
                    "fare_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Monto Fare",
                    ),
                ),
                (
                    "taxes_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Monto Taxes Detectado",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Monto Total",
                    ),
                ),
                (
                    "amount_consistency",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Consistencia Montos",
                    ),
                ),
                (
                    "amount_difference",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Diferencia Total vs Fare+Taxes",
                    ),
                ),
                (
                    "taxes_amount_expected",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Taxes Esperados (Total - Fare)",
                    ),
                ),
                (
                    "taxes_difference",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Diferencia Taxes Detectado vs Esperado",
                    ),
                ),
                (
                    "segments_json",
                    models.JSONField(
                        blank=True,
                        help_text="Lista de segmentos normalizados.",
                        null=True,
                        verbose_name="Segmentos (JSON)",
                    ),
                ),
                (
                    "raw_normalized_json",
                    models.JSONField(
                        blank=True,
                        help_text="Bloque normalized completo para auditoría.",
                        null=True,
                        verbose_name="Objeto Normalized Completo",
                    ),
                ),
                (
                    "creado",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Creado"
                    ),
                ),
            ],
            options={
                "verbose_name": "Metadata de Parseo de Venta",
                "verbose_name_plural": "Metadata de Parseo de Ventas",
                "ordering": ["-creado"],
            },
        ),
        migrations.CreateModel(
            name="CircuitoDia",
            fields=[
                (
                    "id_circuito_dia",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Circuito Día",
                    ),
                ),
                ("dia_numero", models.PositiveSmallIntegerField(verbose_name="Día #")),
                (
                    "titulo",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Título del Día",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                (
                    "alojamiento_previsto",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Alojamiento Previsto",
                    ),
                ),
                (
                    "actividades_resumen",
                    models.TextField(
                        blank=True, null=True, verbose_name="Actividades/Resumen"
                    ),
                ),
                (
                    "circuito",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dias",
                        to="core.circuitoturistico",
                        verbose_name="Circuito",
                    ),
                ),
                (
                    "ciudad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.ciudad",
                        verbose_name="Ciudad",
                    ),
                ),
            ],
            options={
                "verbose_name": "Día de Circuito",
                "verbose_name_plural": "Días de Circuito",
                "ordering": ["circuito", "dia_numero"],
            },
        ),
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id_cliente",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Cliente"
                    ),
                ),
                (
                    "nombres",
                    models.CharField(
                        max_length=100,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombres",
                    ),
                ),
                (
                    "apellidos",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Apellidos"
                    ),
                ),
                (
                    "nombre_empresa",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nombre de Empresa",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Correo Electrónico",
                    ),
                ),
                (
                    "telefono_principal",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Teléfono Principal",
                    ),
                ),
                (
                    "telefono_secundario",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Teléfono Secundario",
                    ),
                ),
                (
                    "direccion_linea1",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Dirección Línea 1",
                    ),
                ),
                (
                    "direccion_linea2",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Dirección Línea 2",
                    ),
                ),
                (
                    "codigo_postal",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Código Postal",
                    ),
                ),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Nacimiento"
                    ),
                ),
                (
                    "numero_pasaporte",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        validators=[core.validators.validar_numero_pasaporte],
                        verbose_name="Número de Pasaporte",
                    ),
                ),
                (
                    "fecha_vencimiento_pasaporte",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha Vencimiento Pasaporte",
                    ),
                ),
                (
                    "preferencias_viaje",
                    models.TextField(
                        blank=True, null=True, verbose_name="Preferencias de Viaje"
                    ),
                ),
                (
                    "notas_cliente",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas sobre el Cliente"
                    ),
                ),
                (
                    "fecha_registro",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Fecha de Registro",
                    ),
                ),
                (
                    "tipo_cliente",
                    models.CharField(
                        choices=[
                            ("IND", "Individual"),
                            ("COR", "Corporativo"),
                            ("VIP", "VIP"),
                            ("OTR", "Otro"),
                        ],
                        default="IND",
                        max_length=3,
                        verbose_name="Tipo de Cliente",
                    ),
                ),
                (
                    "puntos_fidelidad",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Puntos acumulados por el cliente.",
                        verbose_name="Puntos de Fidelidad",
                    ),
                ),
                (
                    "es_cliente_frecuente",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name="Es Cliente Frecuente",
                    ),
                ),
                (
                    "ciudad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="core_clientes",
                        to="core.ciudad",
                        verbose_name="Ciudad",
                    ),
                ),
                (
                    "nacionalidad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clientes_nacionalidad",
                        to="core.pais",
                        verbose_name="Nacionalidad",
                    ),
                ),
                (
                    "pais_emision_pasaporte",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clientes_pasaporte_emitido",
                        to="core.pais",
                        verbose_name="País Emisión Pasaporte",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "ordering": ["apellidos", "nombres", "nombre_empresa"],
            },
        ),
        migrations.CreateModel(
            name="Cotizacion",
            fields=[
                (
                    "id_cotizacion",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Cotización"
                    ),
                ),
                (
                    "numero_cotizacion",
                    models.CharField(
                        blank=True,
                        help_text="Generado automáticamente o manual.",
                        max_length=20,
                        unique=True,
                        verbose_name="Número de Cotización",
                    ),
                ),
                (
                    "fecha_emision",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Fecha de Emisión",
                    ),
                ),
                (
                    "fecha_validez",
                    models.DateField(
                        blank=True, null=True, verbose_name="Válida Hasta"
                    ),
                ),
                (
                    "descripcion_general",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Descripción General del Viaje/Servicio",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Subtotal",
                    ),
                ),
                (
                    "impuestos",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Impuestos",
                    ),
                ),
                (
                    "total_cotizado",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Total Cotizado",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("BOR", "Borrador"),
                            ("ENV", "Enviada al Cliente"),
                            ("ACE", "Aceptada por el Cliente"),
                            ("REC", "Rechazada por el Cliente"),
                            ("VEN", "Vencida"),
                            ("CNV", "Convertida a Venta/Reserva"),
                        ],
                        default="BOR",
                        max_length=3,
                        verbose_name="Estado de la Cotización",
                    ),
                ),
                (
                    "notas_internas",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas Internas"
                    ),
                ),
                (
                    "condiciones_comerciales",
                    models.TextField(
                        blank=True,
                        help_text="Ej. políticas de cancelación, pagos, etc.",
                        null=True,
                        verbose_name="Condiciones Comerciales",
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.cliente",
                        verbose_name="Cliente",
                    ),
                ),
                (
                    "moneda",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="core_cotizaciones",
                        to="core.moneda",
                        verbose_name="Moneda",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cotización",
                "verbose_name_plural": "Cotizaciones",
                "ordering": ["-fecha_emision"],
            },
        ),
        migrations.CreateModel(
            name="Factura",
            fields=[
                (
                    "id_factura",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Factura"
                    ),
                ),
                (
                    "numero_factura",
                    models.CharField(
                        blank=True,
                        help_text="Puede ser un correlativo fiscal o interno.",
                        max_length=50,
                        unique=True,
                        verbose_name="Número de Factura",
                    ),
                ),
                (
                    "fecha_emision",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Fecha de Emisión",
                    ),
                ),
                (
                    "fecha_vencimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Vencimiento"
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Subtotal",
                    ),
                ),
                (
                    "monto_impuestos",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Monto Impuestos",
                    ),
                ),
                (
                    "monto_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=12,
                        verbose_name="Monto Total",
                    ),
                ),
                (
                    "saldo_pendiente",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=12,
                        verbose_name="Saldo Pendiente",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("BOR", "Borrador"),
                            ("EMI", "Emitida (Pendiente de Pago)"),
                            ("PAR", "Pagada Parcialmente"),
                            ("PAG", "Pagada Totalmente"),
                            ("VEN", "Vencida"),
                            ("ANU", "Anulada"),
                        ],
                        default="BOR",
                        max_length=3,
                        verbose_name="Estado de la Factura",
                    ),
                ),
                (
                    "notas",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas de la Factura"
                    ),
                ),
                (
                    "asiento_contable_factura",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="facturas_asociadas",
                        to="core.asientocontable",
                        verbose_name="Asiento Contable de Factura",
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.cliente",
                        verbose_name="Cliente",
                    ),
                ),
                (
                    "moneda",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.moneda",
                        verbose_name="Moneda",
                    ),
                ),
            ],
            options={
                "verbose_name": "Factura de Cliente",
                "verbose_name_plural": "Facturas de Clientes",
                "ordering": ["-fecha_emision", "-numero_factura"],
            },
        ),
        migrations.CreateModel(
            name="ItemFactura",
            fields=[
                (
                    "id_item_factura",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Item Factura",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        max_length=500, verbose_name="Descripción del Item"
                    ),
                ),
                (
                    "cantidad",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        max_digits=10,
                        verbose_name="Cantidad",
                    ),
                ),
                (
                    "precio_unitario",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Precio Unitario"
                    ),
                ),
                (
                    "subtotal_item",
                    models.DecimalField(
                        decimal_places=2,
                        editable=False,
                        max_digits=12,
                        verbose_name="Subtotal Item",
                    ),
                ),
                (
                    "factura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items_factura",
                        to="core.factura",
                        verbose_name="Factura",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Factura",
                "verbose_name_plural": "Items de Factura",
            },
        ),
        migrations.CreateModel(
            name="FeeVenta",
            fields=[
                (
                    "id_fee_venta",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Fee"
                    ),
                ),
                (
                    "tipo_fee",
                    models.CharField(
                        choices=[
                            ("EMI", "Emisión"),
                            ("CAM", "Cambio / Exchange"),
                            ("GST", "Gestión"),
                            ("URG", "Urgente"),
                            ("OTR", "Otro"),
                        ],
                        default="GST",
                        max_length=3,
                        verbose_name="Tipo Fee",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "monto",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Monto"
                    ),
                ),
                (
                    "es_comision_agencia",
                    models.BooleanField(
                        default=True, verbose_name="Es Comisión Agencia"
                    ),
                ),
                (
                    "taxable",
                    models.BooleanField(
                        default=False, verbose_name="Sujeto a Impuestos"
                    ),
                ),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "moneda",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.moneda",
                        verbose_name="Moneda",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fee de Venta",
                "verbose_name_plural": "Fees de Venta",
                "ordering": ["-creado"],
            },
        ),
        migrations.AddField(
            model_name="asientocontable",
            name="moneda",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="core_asientos_contables",
                to="core.moneda",
                verbose_name="Moneda del Asiento",
            ),
        ),
        migrations.CreateModel(
            name="PagoVenta",
            fields=[
                (
                    "id_pago_venta",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Pago"
                    ),
                ),
                (
                    "fecha_pago",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Fecha Pago"
                    ),
                ),
                (
                    "monto",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Monto"
                    ),
                ),
                (
                    "metodo",
                    models.CharField(
                        choices=[
                            ("EFE", "Efectivo"),
                            ("TAR", "Tarjeta"),
                            ("TRF", "Transferencia"),
                            ("ZEL", "Zelle"),
                            ("PPL", "PayPal"),
                            ("OTR", "Otro"),
                        ],
                        default="TRF",
                        max_length=3,
                        verbose_name="Método",
                    ),
                ),
                (
                    "referencia",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Referencia"
                    ),
                ),
                (
                    "confirmado",
                    models.BooleanField(default=True, verbose_name="Confirmado"),
                ),
                (
                    "notas",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "moneda",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.moneda",
                        verbose_name="Moneda",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pago de Venta",
                "verbose_name_plural": "Pagos de Venta",
                "ordering": ["-fecha_pago"],
            },
        ),
        migrations.CreateModel(
            name="DestinoCMS",
            fields=[
                (
                    "id_destino_cms",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Destino CMS"
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=150,
                        unique=True,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombre del Destino",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=170, unique=True, verbose_name="Slug"),
                ),
                (
                    "descripcion_corta",
                    models.TextField(blank=True, verbose_name="Descripción Corta"),
                ),
                (
                    "descripcion_larga",
                    models.TextField(
                        blank=True, verbose_name="Descripción Larga/Detallada"
                    ),
                ),
                (
                    "imagen_destacada",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="cms/destinos/",
                        verbose_name="Imagen Destacada",
                    ),
                ),
                (
                    "mejor_epoca_viajar",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Mejor Época para Viajar",
                    ),
                ),
                (
                    "atracciones_principales",
                    models.TextField(
                        blank=True,
                        help_text="Separar por comas o un punto por línea.",
                        verbose_name="Atracciones Principales (lista)",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PUB", "Publicado"),
                            ("BOR", "Borrador"),
                            ("ARC", "Archivado"),
                        ],
                        default="BOR",
                        max_length=3,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "meta_titulo",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Meta Título (SEO)"
                    ),
                ),
                (
                    "meta_descripcion",
                    models.TextField(blank=True, verbose_name="Meta Descripción (SEO)"),
                ),
                (
                    "pais_ubicacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.pais",
                        verbose_name="País de Ubicación",
                    ),
                ),
            ],
            options={
                "verbose_name": "Destino CMS",
                "verbose_name_plural": "Destinos CMS",
                "ordering": ["nombre"],
            },
        ),
        migrations.AddField(
            model_name="ciudad",
            name="pais",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="core.pais",
                verbose_name="País",
            ),
        ),
        migrations.CreateModel(
            name="PaqueteTuristicoCMS",
            fields=[
                (
                    "id_paquete_cms",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Paquete CMS"
                    ),
                ),
                (
                    "titulo",
                    models.CharField(
                        max_length=255,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Título del Paquete",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="Slug"),
                ),
                (
                    "descripcion_corta",
                    models.TextField(blank=True, verbose_name="Descripción Corta"),
                ),
                (
                    "itinerario_detallado",
                    models.TextField(blank=True, verbose_name="Itinerario Detallado"),
                ),
                (
                    "duracion_dias",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Duración (días)"
                    ),
                ),
                (
                    "precio_desde_texto",
                    models.CharField(
                        blank=True,
                        help_text="Ej: $1,200 p/p base doble",
                        max_length=100,
                        verbose_name="Precio Desde (texto)",
                    ),
                ),
                (
                    "precio_numerico",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Precio Numérico (para filtros)",
                    ),
                ),
                (
                    "incluye",
                    models.TextField(blank=True, verbose_name="Qué Incluye el Paquete"),
                ),
                (
                    "no_incluye",
                    models.TextField(
                        blank=True, verbose_name="Qué NO Incluye el Paquete"
                    ),
                ),
                (
                    "imagen_destacada",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="cms/paquetes/",
                        verbose_name="Imagen Destacada",
                    ),
                ),
                (
                    "fecha_validez_inicio",
                    models.DateField(
                        blank=True, null=True, verbose_name="Válido Desde"
                    ),
                ),
                (
                    "fecha_validez_fin",
                    models.DateField(
                        blank=True, null=True, verbose_name="Válido Hasta"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("ACT", "Activo"),
                            ("INA", "Inactivo"),
                            ("AGO", "Agotado"),
                            ("BOR", "Borrador"),
                        ],
                        default="BOR",
                        max_length=3,
                        verbose_name="Estado del Paquete",
                    ),
                ),
                (
                    "es_destacado",
                    models.BooleanField(
                        default=False,
                        help_text="Mostrar en la página principal o secciones destacadas.",
                        verbose_name="Paquete Destacado",
                    ),
                ),
                (
                    "meta_titulo",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Meta Título (SEO)"
                    ),
                ),
                (
                    "meta_descripcion",
                    models.TextField(blank=True, verbose_name="Meta Descripción (SEO)"),
                ),
                (
                    "destino_principal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.destinocms",
                        verbose_name="Destino Principal",
                    ),
                ),
                (
                    "moneda_paquete",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.moneda",
                        verbose_name="Moneda del Paquete",
                    ),
                ),
            ],
            options={
                "verbose_name": "Paquete Turístico CMS",
                "verbose_name_plural": "Paquetes Turísticos CMS",
                "ordering": ["-es_destacado", "titulo"],
            },
        ),
        migrations.CreateModel(
            name="MenuItemCMS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titulo",
                    models.CharField(max_length=100, verbose_name="Título del Enlace"),
                ),
                (
                    "url_enlace",
                    models.CharField(
                        blank=True,
                        help_text="Dejar vacío si se enlaza a contenido interno.",
                        max_length=255,
                        verbose_name="URL (si es externa o manual)",
                    ),
                ),
                (
                    "orden",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Orden de Aparición"
                    ),
                ),
                (
                    "abrir_en_nueva_pestana",
                    models.BooleanField(
                        default=False, verbose_name="Abrir en Nueva Pestaña"
                    ),
                ),
                (
                    "ubicacion",
                    models.CharField(
                        choices=[
                            ("NAV_PRINCIPAL", "Navegación Principal"),
                            ("FOOTER_1", "Pie de Página (Columna 1)"),
                            ("FOOTER_2", "Pie de Página (Columna 2)"),
                            ("OTRO", "Otra Ubicación"),
                        ],
                        db_index=True,
                        default="NAV_PRINCIPAL",
                        max_length=20,
                        verbose_name="Ubicación del Menú",
                    ),
                ),
                (
                    "destino_enlazado",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.destinocms",
                        verbose_name="Destino CMS Enlazado",
                    ),
                ),
                (
                    "menu_padre",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_items",
                        to="core.menuitemcms",
                        verbose_name="Item Padre (para submenús)",
                    ),
                ),
                (
                    "pagina_enlazada",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.paginacms",
                        verbose_name="Página CMS Enlazada",
                    ),
                ),
                (
                    "paquete_enlazado",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.paqueteturisticocms",
                        verbose_name="Paquete CMS Enlazado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Menú CMS",
                "verbose_name_plural": "Items de Menú CMS",
                "ordering": ["ubicacion", "orden", "titulo"],
            },
        ),
        migrations.CreateModel(
            name="Pasajero",
            fields=[
                (
                    "id_pasajero",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Pasajero"
                    ),
                ),
                (
                    "nombres",
                    models.CharField(
                        max_length=100,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombres",
                    ),
                ),
                (
                    "apellidos",
                    models.CharField(
                        max_length=100,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Apellidos",
                    ),
                ),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Nacimiento"
                    ),
                ),
                (
                    "tipo_documento",
                    models.CharField(
                        choices=[
                            ("PASS", "Pasaporte"),
                            ("CI", "Cédula de Identidad"),
                            ("OTRO", "Otro"),
                        ],
                        default="PASS",
                        max_length=4,
                        verbose_name="Tipo de Documento",
                    ),
                ),
                (
                    "numero_documento",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        validators=[core.validators.validar_numero_pasaporte],
                        verbose_name="Número de Documento/Pasaporte",
                    ),
                ),
                (
                    "fecha_vencimiento_documento",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha Vencimiento Documento",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Correo Electrónico",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="Teléfono"
                    ),
                ),
                (
                    "notas",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas sobre el Pasajero"
                    ),
                ),
                (
                    "nacionalidad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pasajeros_nacionalidad",
                        to="core.pais",
                        verbose_name="Nacionalidad",
                    ),
                ),
                (
                    "pais_emision_documento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.pais",
                        verbose_name="País Emisión Documento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pasajero",
                "verbose_name_plural": "Pasajeros",
                "ordering": ["apellidos", "nombres"],
            },
        ),
        migrations.CreateModel(
            name="PlanContable",
            fields=[
                (
                    "id_cuenta",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Cuenta"
                    ),
                ),
                (
                    "codigo_cuenta",
                    models.CharField(
                        max_length=30,
                        unique=True,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Código de Cuenta",
                    ),
                ),
                (
                    "nombre_cuenta",
                    models.CharField(
                        max_length=100,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombre de la Cuenta",
                    ),
                ),
                (
                    "tipo_cuenta",
                    models.CharField(
                        choices=[
                            ("AC", "Activo"),
                            ("PA", "Pasivo"),
                            ("PT", "Patrimonio"),
                            ("IN", "Ingreso"),
                            ("GA", "Gasto/Costo"),
                            ("CO", "Cuenta de Orden"),
                        ],
                        max_length=2,
                        verbose_name="Tipo de Cuenta",
                    ),
                ),
                (
                    "nivel",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Nivel Jerárquico"
                    ),
                ),
                (
                    "permite_movimientos",
                    models.BooleanField(
                        default=True,
                        help_text="Si es False, es una cuenta de agrupación.",
                        verbose_name="Permite Movimientos",
                    ),
                ),
                (
                    "naturaleza",
                    models.CharField(
                        choices=[("D", "Deudora"), ("H", "Acreedora")],
                        max_length=1,
                        verbose_name="Naturaleza",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                (
                    "cuenta_padre",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subcuentas",
                        to="core.plancontable",
                        verbose_name="Cuenta Padre",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cuenta Contable",
                "verbose_name_plural": "Plan de Cuentas",
                "ordering": ["codigo_cuenta"],
            },
        ),
        migrations.CreateModel(
            name="DetalleAsiento",
            fields=[
                (
                    "id_detalle_asiento",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Detalle Asiento",
                    ),
                ),
                (
                    "linea",
                    models.PositiveSmallIntegerField(
                        help_text="Número de línea dentro del asiento.",
                        verbose_name="Línea",
                    ),
                ),
                (
                    "debe",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=15, verbose_name="Debe"
                    ),
                ),
                (
                    "haber",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=15, verbose_name="Haber"
                    ),
                ),
                (
                    "descripcion_linea",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Descripción de la Línea",
                    ),
                ),
                (
                    "asiento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="detalles_asiento",
                        to="core.asientocontable",
                        verbose_name="Asiento Contable",
                    ),
                ),
                (
                    "cuenta_contable",
                    models.ForeignKey(
                        limit_choices_to={"permite_movimientos": True},
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.plancontable",
                        verbose_name="Cuenta Contable",
                    ),
                ),
            ],
            options={
                "verbose_name": "Detalle de Asiento",
                "verbose_name_plural": "Detalles de Asientos",
                "ordering": ["asiento", "linea"],
            },
        ),
        migrations.CreateModel(
            name="ProductoServicio",
            fields=[
                (
                    "id_producto_servicio",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Producto/Servicio",
                    ),
                ),
                (
                    "codigo_interno",
                    models.CharField(
                        blank=True,
                        help_text="Código interno de la agencia para este producto/servicio.",
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="Código Interno",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=255,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombre del Producto/Servicio",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                (
                    "tipo_producto",
                    models.CharField(
                        choices=[
                            ("AIR", "Boleto Aéreo"),
                            ("HTL", "Alojamiento (Hotel)"),
                            ("PKG", "Paquete Turístico"),
                            ("TOU", "Tour o Actividad"),
                            ("TRF", "Traslado"),
                            ("INS", "Seguro de Viaje"),
                            ("CRU", "Crucero"),
                            ("CAR", "Alquiler de Auto"),
                            ("SVC", "Servicio Adicional"),
                            ("OTR", "Otro"),
                        ],
                        default="OTR",
                        max_length=3,
                        verbose_name="Tipo de Producto/Servicio",
                    ),
                ),
                (
                    "costo_estandar_referencial",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Costo aproximado para la agencia.",
                        max_digits=12,
                        null=True,
                        verbose_name="Costo Estándar Referencial",
                    ),
                ),
                (
                    "precio_venta_sugerido",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Precio de Venta Sugerido",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si este producto/servicio está actualmente ofrecido.",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "requiere_datos_pasajero_especificos",
                    models.BooleanField(
                        default=False,
                        help_text="Ej. para boletos aéreos, seguros.",
                        verbose_name="Requiere Datos Específicos del Pasajero",
                    ),
                ),
                (
                    "moneda_referencial",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.moneda",
                        verbose_name="Moneda Referencial",
                    ),
                ),
            ],
            options={
                "verbose_name": "Producto o Servicio",
                "verbose_name_plural": "Productos y Servicios",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="ItemCotizacion",
            fields=[
                (
                    "id_item_cotizacion",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Item Cotización",
                    ),
                ),
                (
                    "descripcion_personalizada",
                    models.CharField(
                        blank=True,
                        help_text="Si se desea una descripción diferente a la del catálogo.",
                        max_length=500,
                        null=True,
                        verbose_name="Descripción Personalizada",
                    ),
                ),
                (
                    "cantidad",
                    models.PositiveIntegerField(default=1, verbose_name="Cantidad"),
                ),
                (
                    "precio_unitario",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Precio Unitario"
                    ),
                ),
                (
                    "impuestos_item",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Impuestos por Item",
                    ),
                ),
                (
                    "subtotal_item",
                    models.DecimalField(
                        decimal_places=2,
                        editable=False,
                        max_digits=12,
                        verbose_name="Subtotal Item",
                    ),
                ),
                (
                    "total_item",
                    models.DecimalField(
                        decimal_places=2,
                        editable=False,
                        max_digits=12,
                        verbose_name="Total Item",
                    ),
                ),
                (
                    "cotizacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items_cotizacion",
                        to="core.cotizacion",
                        verbose_name="Cotización",
                    ),
                ),
                (
                    "producto_servicio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="core_items_cotizacion",
                        to="core.productoservicio",
                        verbose_name="Producto/Servicio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Cotización",
                "verbose_name_plural": "Items de Cotización",
                "ordering": ["id_item_cotizacion"],
            },
        ),
        migrations.CreateModel(
            name="Proveedor",
            fields=[
                (
                    "id_proveedor",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Proveedor"
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=150,
                        unique=True,
                        validators=[core.validators.validar_no_vacio_o_espacios],
                        verbose_name="Nombre del Proveedor",
                    ),
                ),
                (
                    "tipo_proveedor",
                    models.CharField(
                        choices=[
                            ("AER", "Aerolínea"),
                            ("HTL", "Hotel"),
                            ("OPT", "Operador Turístico"),
                            ("CON", "Consolidador"),
                            ("MAY", "Mayorista"),
                            ("SEG", "Seguros"),
                            ("TRN", "Transporte Terrestre"),
                            ("GDS", "Sistema de Distribución Global (GDS)"),
                            ("OTR", "Otro"),
                        ],
                        default="OTR",
                        max_length=3,
                        verbose_name="Tipo de Proveedor",
                    ),
                ),
                (
                    "nivel_proveedor",
                    models.CharField(
                        choices=[
                            ("DIR", "Directo"),
                            ("CON", "Consolidador"),
                            ("MAY", "Mayorista"),
                            ("TER", "Otro (Tercero)"),
                        ],
                        default="DIR",
                        help_text="Nivel de intermediación del proveedor.",
                        max_length=3,
                        verbose_name="Nivel del Proveedor",
                    ),
                ),
                (
                    "contacto_nombre",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nombre de Contacto",
                    ),
                ),
                (
                    "contacto_email",
                    models.EmailField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Email de Contacto",
                    ),
                ),
                (
                    "contacto_telefono",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Teléfono de Contacto",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Dirección"
                    ),
                ),
                (
                    "notas",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas sobre el Proveedor"
                    ),
                ),
                (
                    "numero_cuenta_agencia",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Número de Cuenta/IATA con el Proveedor",
                    ),
                ),
                (
                    "condiciones_pago",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Condiciones de Pago",
                    ),
                ),
                (
                    "datos_bancarios",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Datos Bancarios del Proveedor",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el proveedor está actualmente activo.",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "iata",
                    models.CharField(
                        blank=True,
                        help_text="Número IATA del proveedor",
                        max_length=10,
                        null=True,
                        verbose_name="IATA",
                    ),
                ),
                (
                    "seudo_sabre",
                    models.CharField(
                        blank=True, max_length=4, null=True, verbose_name="Seudo SABRE"
                    ),
                ),
                (
                    "office_id_kiu",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        verbose_name="Office ID KIU",
                    ),
                ),
                (
                    "office_id_amadeus",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Office ID AMADEUS",
                    ),
                ),
                (
                    "office_id_travelport",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Office ID TRAVELPORT",
                    ),
                ),
                (
                    "office_id_hotelbeds",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Office ID HOTEL BEDS",
                    ),
                ),
                (
                    "office_id_expedia",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Office ID EXPEDIA",
                    ),
                ),
                (
                    "otro_sistema_1_nombre",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 1: Nombre",
                    ),
                ),
                (
                    "otro_sistema_1_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 1: ID",
                    ),
                ),
                (
                    "otro_sistema_2_nombre",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 2: Nombre",
                    ),
                ),
                (
                    "otro_sistema_2_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 2: ID",
                    ),
                ),
                (
                    "otro_sistema_3_nombre",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 3: Nombre",
                    ),
                ),
                (
                    "otro_sistema_3_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 3: ID",
                    ),
                ),
                (
                    "otro_sistema_4_nombre",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 4: Nombre",
                    ),
                ),
                (
                    "otro_sistema_4_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 4: ID",
                    ),
                ),
                (
                    "otro_sistema_5_nombre",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 5: Nombre",
                    ),
                ),
                (
                    "otro_sistema_5_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Otro Sistema 5: ID",
                    ),
                ),
                (
                    "ciudad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.ciudad",
                        verbose_name="Ciudad",
                    ),
                ),
            ],
            options={
                "verbose_name": "Proveedor",
                "verbose_name_plural": "Proveedores",
                "ordering": ["nombre"],
            },
        ),
        migrations.AddField(
            model_name="productoservicio",
            name="proveedor_principal",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.proveedor",
                verbose_name="Proveedor Principal/Preferido",
            ),
        ),
        migrations.CreateModel(
            name="ItemVenta",
            fields=[
                (
                    "id_item_venta",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Item Venta"
                    ),
                ),
                (
                    "descripcion_personalizada",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Descripción Personalizada",
                    ),
                ),
                (
                    "cantidad",
                    models.PositiveIntegerField(default=1, verbose_name="Cantidad"),
                ),
                (
                    "precio_unitario_venta",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        verbose_name="Precio Unitario de Venta",
                    ),
                ),
                (
                    "costo_unitario_referencial",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Costo Unitario Referencial",
                    ),
                ),
                (
                    "impuestos_item_venta",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Impuestos por Item",
                    ),
                ),
                (
                    "subtotal_item_venta",
                    models.DecimalField(
                        decimal_places=2,
                        editable=False,
                        max_digits=12,
                        verbose_name="Subtotal Item",
                    ),
                ),
                (
                    "total_item_venta",
                    models.DecimalField(
                        decimal_places=2,
                        editable=False,
                        max_digits=12,
                        verbose_name="Total Item",
                    ),
                ),
                (
                    "fecha_inicio_servicio",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha Inicio Servicio"
                    ),
                ),
                (
                    "fecha_fin_servicio",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha Fin Servicio"
                    ),
                ),
                (
                    "codigo_reserva_proveedor",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código Reserva Proveedor (PNR, Localizador)",
                    ),
                ),
                (
                    "estado_item",
                    models.CharField(
                        choices=[
                            ("PCO", "Pendiente Confirmación Proveedor"),
                            ("CNF", "Confirmado por Proveedor"),
                            ("CAP", "Cancelado por Proveedor"),
                            ("CAC", "Cancelado por Cliente"),
                            ("UTI", "Utilizado/Completado"),
                        ],
                        default="PCO",
                        max_length=3,
                        verbose_name="Estado del Item/Servicio",
                    ),
                ),
                (
                    "notas_item",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas del Item"
                    ),
                ),
                (
                    "producto_servicio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.productoservicio",
                        verbose_name="Producto/Servicio",
                    ),
                ),
                (
                    "proveedor_servicio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.proveedor",
                        verbose_name="Proveedor del Servicio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Venta/Reserva",
                "verbose_name_plural": "Items de Venta/Reserva",
            },
        ),
        migrations.CreateModel(
            name="EventoServicio",
            fields=[
                (
                    "id_evento_servicio",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Evento/Servicio",
                    ),
                ),
                (
                    "nombre_evento",
                    models.CharField(max_length=255, verbose_name="Nombre Evento"),
                ),
                (
                    "fecha_evento",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha Evento"
                    ),
                ),
                (
                    "ubicacion",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Ubicación"
                    ),
                ),
                (
                    "zona_asiento",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Zona/Asiento",
                    ),
                ),
                (
                    "codigo_boleto_evento",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Código Boleto / Ref",
                    ),
                ),
                (
                    "notas",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "costo_neto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Costo Neto",
                    ),
                ),
                (
                    "precio_venta",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Precio Venta",
                    ),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.proveedor",
                        verbose_name="Proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evento / Servicio",
                "verbose_name_plural": "Eventos / Servicios",
                "ordering": ["fecha_evento"],
            },
        ),
        migrations.CreateModel(
            name="AlquilerAutoReserva",
            fields=[
                (
                    "id_alquiler_auto",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Alquiler Auto",
                    ),
                ),
                (
                    "fecha_hora_retiro",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha/Hora Retiro"
                    ),
                ),
                (
                    "fecha_hora_devolucion",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha/Hora Devolución"
                    ),
                ),
                (
                    "categoria_auto",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Categoría / Clase",
                    ),
                ),
                (
                    "compania_rentadora",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Compañía Rentadora",
                    ),
                ),
                (
                    "numero_confirmacion",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Número Confirmación",
                    ),
                ),
                (
                    "incluye_seguro",
                    models.BooleanField(default=False, verbose_name="Incluye Seguro"),
                ),
                (
                    "notas",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "costo_neto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Costo Neto",
                    ),
                ),
                (
                    "precio_venta",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Precio Venta",
                    ),
                ),
                (
                    "ciudad_devolucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="autos_devolucion",
                        to="core.ciudad",
                        verbose_name="Ciudad Devolución",
                    ),
                ),
                (
                    "ciudad_retiro",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="autos_retiro",
                        to="core.ciudad",
                        verbose_name="Ciudad Retiro",
                    ),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.proveedor",
                        verbose_name="Proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alquiler de Auto",
                "verbose_name_plural": "Alquileres de Autos",
                "ordering": ["fecha_hora_retiro"],
            },
        ),
        migrations.CreateModel(
            name="AlojamientoReserva",
            fields=[
                (
                    "id_alojamiento_reserva",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Alojamiento"
                    ),
                ),
                (
                    "nombre_establecimiento",
                    models.CharField(
                        max_length=150, verbose_name="Nombre Establecimiento"
                    ),
                ),
                (
                    "check_in",
                    models.DateField(blank=True, null=True, verbose_name="Check In"),
                ),
                (
                    "check_out",
                    models.DateField(blank=True, null=True, verbose_name="Check Out"),
                ),
                (
                    "regimen_alimentacion",
                    models.CharField(
                        blank=True,
                        help_text="Ej: Desayuno, Media Pensión, Todo Incluido",
                        max_length=30,
                        null=True,
                        verbose_name="Régimen Alimentación",
                    ),
                ),
                (
                    "habitaciones",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Habitaciones"
                    ),
                ),
                (
                    "notas",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "ciudad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.ciudad",
                        verbose_name="Ciudad",
                    ),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.proveedor",
                        verbose_name="Proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alojamiento (Reserva)",
                "verbose_name_plural": "Alojamientos (Reservas)",
                "ordering": ["check_in"],
            },
        ),
        migrations.CreateModel(
            name="ActividadServicio",
            fields=[
                (
                    "id_actividad_servicio",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Actividad"
                    ),
                ),
                (
                    "nombre",
                    models.CharField(max_length=150, verbose_name="Nombre Actividad"),
                ),
                (
                    "fecha",
                    models.DateField(blank=True, null=True, verbose_name="Fecha"),
                ),
                (
                    "duracion_horas",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Duración (horas)",
                    ),
                ),
                (
                    "incluye",
                    models.TextField(blank=True, null=True, verbose_name="Incluye"),
                ),
                (
                    "no_incluye",
                    models.TextField(blank=True, null=True, verbose_name="No Incluye"),
                ),
                (
                    "notas",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.proveedor",
                        verbose_name="Proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Actividad / Excursión",
                "verbose_name_plural": "Actividades / Excursiones",
                "ordering": ["fecha", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="SegmentoVuelo",
            fields=[
                (
                    "id_segmento_vuelo",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Segmento Vuelo",
                    ),
                ),
                (
                    "aerolinea",
                    models.CharField(
                        blank=True, max_length=80, null=True, verbose_name="Aerolínea"
                    ),
                ),
                (
                    "numero_vuelo",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Número de Vuelo",
                    ),
                ),
                (
                    "fecha_salida",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha/Hora Salida"
                    ),
                ),
                (
                    "fecha_llegada",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha/Hora Llegada"
                    ),
                ),
                (
                    "clase_reserva",
                    models.CharField(
                        blank=True, max_length=5, null=True, verbose_name="Clase"
                    ),
                ),
                (
                    "cabina",
                    models.CharField(
                        blank=True,
                        help_text="Ej: Economy, Business, First",
                        max_length=20,
                        null=True,
                        verbose_name="Cabina",
                    ),
                ),
                (
                    "notas",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "destino",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="segmentos_llegada",
                        to="core.ciudad",
                        verbose_name="Ciudad Destino",
                    ),
                ),
                (
                    "origen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="segmentos_salida",
                        to="core.ciudad",
                        verbose_name="Ciudad Origen",
                    ),
                ),
            ],
            options={
                "verbose_name": "Segmento de Vuelo",
                "verbose_name_plural": "Segmentos de Vuelo",
                "ordering": ["fecha_salida"],
            },
        ),
        migrations.CreateModel(
            name="ServicioAdicionalDetalle",
            fields=[
                (
                    "id_servicio_adicional",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Servicio Adicional",
                    ),
                ),
                (
                    "tipo_servicio",
                    models.CharField(
                        choices=[
                            ("SEG", "Seguro"),
                            ("SIM", "SIM / E-SIM"),
                            ("AST", "Asistencia"),
                            ("LNG", "Lounge"),
                            ("FST", "Fast Track"),
                            ("OTR", "Otro"),
                        ],
                        default="OTR",
                        max_length=3,
                        verbose_name="Tipo Servicio",
                    ),
                ),
                (
                    "codigo_referencia",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Código Referencia",
                    ),
                ),
                (
                    "fecha_inicio",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha Inicio"
                    ),
                ),
                (
                    "fecha_fin",
                    models.DateField(blank=True, null=True, verbose_name="Fecha Fin"),
                ),
                (
                    "metadata_json",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Metadata Adicional"
                    ),
                ),
                (
                    "notas",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "costo_neto",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Costo Neto",
                    ),
                ),
                (
                    "precio_venta",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Precio Venta",
                    ),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.proveedor",
                        verbose_name="Proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Servicio Adicional Detalle",
                "verbose_name_plural": "Servicios Adicionales Detalle",
                "ordering": ["-id_servicio_adicional"],
            },
        ),
        migrations.CreateModel(
            name="TipoCambio",
            fields=[
                (
                    "id_tipo_cambio",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Tipo de Cambio",
                    ),
                ),
                (
                    "fecha_efectiva",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Fecha en que esta tasa de cambio entra en vigor.",
                        verbose_name="Fecha Efectiva",
                    ),
                ),
                (
                    "tasa_conversion",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Cuánto de la moneda destino equivale a 1 unidad de la moneda origen.",
                        max_digits=18,
                        verbose_name="Tasa de Conversión",
                    ),
                ),
                (
                    "moneda_destino",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tipos_cambio_destino",
                        to="core.moneda",
                        verbose_name="Moneda Destino",
                    ),
                ),
                (
                    "moneda_origen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tipos_cambio_origen",
                        to="core.moneda",
                        verbose_name="Moneda Origen",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tipo de Cambio",
                "verbose_name_plural": "Tipos de Cambio",
                "ordering": ["-fecha_efectiva", "moneda_origen__codigo_iso"],
            },
        ),
        migrations.CreateModel(
            name="TrasladoServicio",
            fields=[
                (
                    "id_traslado_servicio",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID Traslado"
                    ),
                ),
                (
                    "tipo_traslado",
                    models.CharField(
                        choices=[
                            ("ARR", "Arribo / Llegada"),
                            ("DEP", "Salida"),
                            ("INT", "Interno"),
                        ],
                        default="ARR",
                        max_length=3,
                        verbose_name="Tipo Traslado",
                    ),
                ),
                (
                    "origen",
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name="Origen"
                    ),
                ),
                (
                    "destino",
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name="Destino"
                    ),
                ),
                (
                    "fecha_hora",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha/Hora"
                    ),
                ),
                (
                    "pasajeros",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Pasajeros"
                    ),
                ),
                (
                    "notas",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.proveedor",
                        verbose_name="Proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Traslado",
                "verbose_name_plural": "Traslados",
                "ordering": ["fecha_hora"],
            },
        ),
        migrations.CreateModel(
            name="Venta",
            fields=[
                (
                    "id_venta",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID Venta/Reserva",
                    ),
                ),
                (
                    "localizador",
                    models.CharField(
                        blank=True,
                        help_text="Código único de la reserva o localizador.",
                        max_length=20,
                        unique=True,
                        verbose_name="Localizador/PNR",
                    ),
                ),
                (
                    "fecha_venta",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Fecha de Venta/Reserva",
                    ),
                ),
                (
                    "descripcion_general",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Descripción General de la Venta",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Subtotal",
                    ),
                ),
                (
                    "impuestos",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Impuestos",
                    ),
                ),
                (
                    "total_venta",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=12,
                        verbose_name="Total Venta",
                    ),
                ),
                (
                    "monto_pagado",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Monto Pagado",
                    ),
                ),
                (
                    "saldo_pendiente",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        editable=False,
                        max_digits=12,
                        verbose_name="Saldo Pendiente",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PEN", "Pendiente de Pago"),
                            ("PAR", "Pagada Parcialmente"),
                            ("PAG", "Pagada Totalmente"),
                            ("CNF", "Confirmada (Servicios OK)"),
                            ("VIA", "En Proceso/Viaje"),
                            ("COM", "Completada"),
                            ("CAN", "Cancelada"),
                        ],
                        default="PEN",
                        max_length=3,
                        verbose_name="Estado de la Venta/Reserva",
                    ),
                ),
                (
                    "tipo_venta",
                    models.CharField(
                        choices=[
                            ("B2C", "B2C (Ocio)"),
                            ("B2B", "B2B (Corporativo)"),
                            ("MICE", "MICE / Eventos"),
                            ("PKG", "Paquete"),
                            ("CIR", "Circuito"),
                            ("TLD", "Viaje a Medida"),
                            ("SEG", "Solo Seguro"),
                            ("OTR", "Otro"),
                        ],
                        db_index=True,
                        default="B2C",
                        max_length=4,
                        verbose_name="Tipo de Venta",
                    ),
                ),
                (
                    "canal_origen",
                    models.CharField(
                        choices=[
                            ("ADM", "Admin"),
                            ("IMP", "Importación"),
                            ("API", "API"),
                            ("WEB", "Formulario Web"),
                            ("MIG", "Migración"),
                            ("OTR", "Otro"),
                        ],
                        db_index=True,
                        default="ADM",
                        max_length=3,
                        verbose_name="Canal de Origen",
                    ),
                ),
                (
                    "margen_estimado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Precio venta - costo neto estimado (informativo).",
                        max_digits=12,
                        null=True,
                        verbose_name="Margen Estimado",
                    ),
                ),
                (
                    "co2_estimado_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimación agregada de la huella de carbono.",
                        max_digits=12,
                        null=True,
                        verbose_name="Emisiones CO₂ Estimadas (kg)",
                    ),
                ),
                (
                    "notas",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas de la Venta"
                    ),
                ),
                (
                    "puntos_fidelidad_asignados",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Evita otorgar puntos duplicados cuando la venta pasa a completada/pagada.",
                        verbose_name="Puntos Fidelidad Asignados",
                    ),
                ),
                (
                    "asiento_contable_venta",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ventas_asociadas",
                        to="core.asientocontable",
                        verbose_name="Asiento Contable de Venta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Venta / Reserva",
                "verbose_name_plural": "Ventas / Reservas",
                "ordering": ["-fecha_venta"],
            },
        ),
    ]

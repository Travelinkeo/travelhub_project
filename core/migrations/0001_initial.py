# Generated by Django 5.2.3 on 2025-06-15 23:57

import core.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArticuloBlog',
            fields=[
                ('id_articulo', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Artículo')),
                ('titulo', models.CharField(max_length=255, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Título del Artículo')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('contenido', models.TextField(verbose_name='Contenido del Artículo')),
                ('extracto', models.TextField(blank=True, verbose_name='Extracto o Resumen')),
                ('fecha_publicacion', models.DateTimeField(blank=True, help_text="Si está en blanco y el estado es 'Publicado', se usará la fecha actual.", null=True, verbose_name='Fecha de Publicación')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('imagen_destacada', models.ImageField(blank=True, null=True, upload_to='cms/blog/', verbose_name='Imagen Destacada')),
                ('estado', models.CharField(choices=[('PUB', 'Publicado'), ('BOR', 'Borrador'), ('ARC', 'Archivado')], default='BOR', max_length=3, verbose_name='Estado')),
                ('permitir_comentarios', models.BooleanField(default=True, verbose_name='Permitir Comentarios')),
                ('meta_titulo', models.CharField(blank=True, max_length=255, verbose_name='Meta Título (SEO)')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='Meta Descripción (SEO)')),
            ],
            options={
                'verbose_name': 'Artículo de Blog',
                'verbose_name_plural': 'Artículos de Blog',
                'ordering': ['-fecha_publicacion', '-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='AsientoContable',
            fields=[
                ('id_asiento', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Asiento')),
                ('numero_asiento', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número de Asiento')),
                ('fecha_contable', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha Contable')),
                ('descripcion_general', models.CharField(max_length=255, verbose_name='Descripción General')),
                ('tipo_asiento', models.CharField(choices=[('DIA', 'Diario'), ('COM', 'Compras'), ('VEN', 'Ventas'), ('NOM', 'Nómina'), ('APE', 'Apertura'), ('CIE', 'Cierre'), ('AJU', 'Ajuste')], default='DIA', max_length=3, verbose_name='Tipo de Asiento')),
                ('referencia_documento', models.CharField(blank=True, help_text='Ej: Factura #, Reserva #', max_length=100, null=True, verbose_name='Referencia Documento')),
                ('estado', models.CharField(choices=[('BOR', 'Borrador'), ('CON', 'Contabilizado'), ('ANU', 'Anulado')], default='BOR', max_length=3, verbose_name='Estado')),
                ('tasa_cambio_aplicada', models.DecimalField(decimal_places=8, default=1.0, help_text='Respecto a la moneda local, si aplica.', max_digits=18, verbose_name='Tasa de Cambio Aplicada')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('total_debe', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=15, verbose_name='Total Debe')),
                ('total_haber', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=15, verbose_name='Total Haber')),
            ],
            options={
                'verbose_name': 'Asiento Contable',
                'verbose_name_plural': 'Asientos Contables',
                'ordering': ['-fecha_contable', '-numero_asiento'],
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id_ciudad', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Ciudad')),
                ('nombre', models.CharField(max_length=100, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombre de la Ciudad')),
                ('region_estado', models.CharField(blank=True, max_length=100, null=True, verbose_name='Región/Estado')),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
                'ordering': ['pais__nombre', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='FormularioContactoCMS',
            fields=[
                ('id_envio', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Envío')),
                ('nombre_completo', models.CharField(max_length=150, verbose_name='Nombre Completo')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo Electrónico')),
                ('telefono', models.CharField(blank=True, max_length=30, verbose_name='Teléfono')),
                ('asunto', models.CharField(blank=True, max_length=200, verbose_name='Asunto')),
                ('mensaje', models.TextField(verbose_name='Mensaje')),
                ('fecha_envio', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Envío')),
                ('ip_origen', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP de Origen')),
                ('estado_lectura', models.CharField(choices=[('NOL', 'No Leído'), ('LEI', 'Leído'), ('PRO', 'Procesado/Respondido'), ('SPM', 'Spam')], default='NOL', max_length=3, verbose_name='Estado de Lectura')),
            ],
            options={
                'verbose_name': 'Envío de Formulario de Contacto',
                'verbose_name_plural': 'Envíos de Formularios de Contacto',
                'ordering': ['-fecha_envio'],
            },
        ),
        migrations.CreateModel(
            name='Moneda',
            fields=[
                ('id_moneda', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Moneda')),
                ('codigo_iso', models.CharField(help_text='Código ISO 4217 de la moneda (ej. USD, EUR, VEF).', max_length=3, unique=True, verbose_name='Código ISO')),
                ('nombre', models.CharField(max_length=50, unique=True, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombre de la Moneda')),
                ('simbolo', models.CharField(blank=True, max_length=5, null=True, verbose_name='Símbolo')),
                ('es_moneda_local', models.BooleanField(default=False, help_text='Marcar si esta es la moneda principal de la agencia.', verbose_name='Es Moneda Local')),
            ],
            options={
                'verbose_name': 'Moneda',
                'verbose_name_plural': 'Monedas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='PaginaCMS',
            fields=[
                ('id_pagina_cms', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Página CMS')),
                ('titulo', models.CharField(max_length=200, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Título de la Página')),
                ('slug', models.SlugField(help_text='Se genera automáticamente si se deja vacío, o se puede especificar.', max_length=255, unique=True, verbose_name='Slug (URL amigable)')),
                ('contenido', models.TextField(blank=True, verbose_name='Contenido HTML/Markdown')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('estado', models.CharField(choices=[('PUB', 'Publicado'), ('BOR', 'Borrador'), ('ARC', 'Archivado')], default='BOR', max_length=3, verbose_name='Estado de Publicación')),
                ('plantilla', models.CharField(blank=True, help_text="Ej: 'cms/pagina_detalle.html'. Si está vacío, usa una por defecto.", max_length=100, null=True, verbose_name='Plantilla Django a usar')),
                ('meta_titulo', models.CharField(blank=True, max_length=255, verbose_name='Meta Título (SEO)')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='Meta Descripción (SEO)')),
            ],
            options={
                'verbose_name': 'Página CMS',
                'verbose_name_plural': 'Páginas CMS',
                'ordering': ['titulo'],
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id_pais', models.AutoField(primary_key=True, serialize=False, verbose_name='ID País')),
                ('codigo_iso_2', models.CharField(help_text='Código ISO 3166-1 alfa-2 del país.', max_length=2, unique=True, verbose_name='Código ISO 2')),
                ('codigo_iso_3', models.CharField(help_text='Código ISO 3166-1 alfa-3 del país.', max_length=3, unique=True, verbose_name='Código ISO 3')),
                ('nombre', models.CharField(max_length=100, unique=True, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombre del País')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Testimonio',
            fields=[
                ('id_testimonio', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Testimonio')),
                ('nombre_cliente', models.CharField(max_length=150, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombre del Cliente')),
                ('texto_testimonio', models.TextField(validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Texto del Testimonio')),
                ('calificacion', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True, verbose_name='Calificación (1-5)')),
                ('fecha_recibido', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha Recibido/Viaje')),
                ('estado', models.CharField(choices=[('PEN', 'Pendiente de Aprobación'), ('APR', 'Aprobado y Visible'), ('REC', 'Rechazado')], default='PEN', max_length=3, verbose_name='Estado')),
                ('origen', models.CharField(blank=True, help_text='Ej: Formulario web, Email, Red social', max_length=50, verbose_name='Origen del Testimonio')),
            ],
            options={
                'verbose_name': 'Testimonio',
                'verbose_name_plural': 'Testimonios',
                'ordering': ['-fecha_recibido'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id_cliente', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Cliente')),
                ('nombres', models.CharField(max_length=100, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombres')),
                ('apellidos', models.CharField(blank=True, max_length=100, null=True, verbose_name='Apellidos')),
                ('nombre_empresa', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre de Empresa')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='Correo Electrónico')),
                ('telefono_principal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Teléfono Principal')),
                ('telefono_secundario', models.CharField(blank=True, max_length=30, null=True, verbose_name='Teléfono Secundario')),
                ('direccion_linea1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dirección Línea 1')),
                ('direccion_linea2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dirección Línea 2')),
                ('codigo_postal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Código Postal')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('numero_pasaporte', models.CharField(blank=True, max_length=50, null=True, validators=[core.models.validar_numero_pasaporte], verbose_name='Número de Pasaporte')),
                ('fecha_vencimiento_pasaporte', models.DateField(blank=True, null=True, verbose_name='Fecha Vencimiento Pasaporte')),
                ('preferencias_viaje', models.TextField(blank=True, null=True, verbose_name='Preferencias de Viaje')),
                ('notas_cliente', models.TextField(blank=True, null=True, verbose_name='Notas sobre el Cliente')),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Registro')),
                ('tipo_cliente', models.CharField(choices=[('IND', 'Individual'), ('COR', 'Corporativo'), ('VIP', 'VIP'), ('OTR', 'Otro')], default='IND', max_length=3, verbose_name='Tipo de Cliente')),
                ('puntos_fidelidad', models.PositiveIntegerField(default=0, help_text='Puntos acumulados por el cliente.', verbose_name='Puntos de Fidelidad')),
                ('es_cliente_frecuente', models.BooleanField(default=False, editable=False, verbose_name='Es Cliente Frecuente')),
                ('ciudad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ciudad', verbose_name='Ciudad')),
                ('nacionalidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clientes_nacionalidad', to='core.pais', verbose_name='Nacionalidad')),
                ('pais_emision_pasaporte', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clientes_pasaporte_emitido', to='core.pais', verbose_name='País Emisión Pasaporte')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['apellidos', 'nombres', 'nombre_empresa'],
            },
        ),
        migrations.CreateModel(
            name='Cotizacion',
            fields=[
                ('id_cotizacion', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Cotización')),
                ('numero_cotizacion', models.CharField(blank=True, help_text='Generado automáticamente o manual.', max_length=20, unique=True, verbose_name='Número de Cotización')),
                ('fecha_emision', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Emisión')),
                ('fecha_validez', models.DateField(blank=True, null=True, verbose_name='Válida Hasta')),
                ('descripcion_general', models.TextField(blank=True, null=True, verbose_name='Descripción General del Viaje/Servicio')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Subtotal')),
                ('impuestos', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Impuestos')),
                ('total_cotizado', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Cotizado')),
                ('estado', models.CharField(choices=[('BOR', 'Borrador'), ('ENV', 'Enviada al Cliente'), ('ACE', 'Aceptada por el Cliente'), ('REC', 'Rechazada por el Cliente'), ('VEN', 'Vencida'), ('CNV', 'Convertida a Venta/Reserva')], default='BOR', max_length=3, verbose_name='Estado de la Cotización')),
                ('notas_internas', models.TextField(blank=True, null=True, verbose_name='Notas Internas')),
                ('condiciones_comerciales', models.TextField(blank=True, help_text='Ej. políticas de cancelación, pagos, etc.', null=True, verbose_name='Condiciones Comerciales')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cliente', verbose_name='Cliente')),
                ('moneda', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.moneda', verbose_name='Moneda')),
            ],
            options={
                'verbose_name': 'Cotización',
                'verbose_name_plural': 'Cotizaciones',
                'ordering': ['-fecha_emision'],
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id_factura', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Factura')),
                ('numero_factura', models.CharField(blank=True, help_text='Puede ser un correlativo fiscal o interno.', max_length=50, unique=True, verbose_name='Número de Factura')),
                ('fecha_emision', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Emisión')),
                ('fecha_vencimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Vencimiento')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Subtotal')),
                ('monto_impuestos', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Monto Impuestos')),
                ('monto_total', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Monto Total')),
                ('saldo_pendiente', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Saldo Pendiente')),
                ('estado', models.CharField(choices=[('BOR', 'Borrador'), ('EMI', 'Emitida (Pendiente de Pago)'), ('PAR', 'Pagada Parcialmente'), ('PAG', 'Pagada Totalmente'), ('VEN', 'Vencida'), ('ANU', 'Anulada')], default='BOR', max_length=3, verbose_name='Estado de la Factura')),
                ('notas', models.TextField(blank=True, null=True, verbose_name='Notas de la Factura')),
                ('asiento_contable_factura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facturas_asociadas', to='core.asientocontable', verbose_name='Asiento Contable de Factura')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cliente', verbose_name='Cliente')),
                ('moneda', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.moneda', verbose_name='Moneda')),
            ],
            options={
                'verbose_name': 'Factura de Cliente',
                'verbose_name_plural': 'Facturas de Clientes',
                'ordering': ['-fecha_emision', '-numero_factura'],
            },
        ),
        migrations.CreateModel(
            name='ItemFactura',
            fields=[
                ('id_item_factura', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Item Factura')),
                ('descripcion', models.CharField(max_length=500, verbose_name='Descripción del Item')),
                ('cantidad', models.DecimalField(decimal_places=2, default=1, max_digits=10, verbose_name='Cantidad')),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Precio Unitario')),
                ('subtotal_item', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Subtotal Item')),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_factura', to='core.factura', verbose_name='Factura')),
            ],
            options={
                'verbose_name': 'Item de Factura',
                'verbose_name_plural': 'Items de Factura',
            },
        ),
        migrations.AddField(
            model_name='asientocontable',
            name='moneda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.moneda', verbose_name='Moneda del Asiento'),
        ),
        migrations.CreateModel(
            name='DestinoCMS',
            fields=[
                ('id_destino_cms', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Destino CMS')),
                ('nombre', models.CharField(max_length=150, unique=True, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombre del Destino')),
                ('slug', models.SlugField(max_length=170, unique=True, verbose_name='Slug')),
                ('descripcion_corta', models.TextField(blank=True, verbose_name='Descripción Corta')),
                ('descripcion_larga', models.TextField(blank=True, verbose_name='Descripción Larga/Detallada')),
                ('imagen_destacada', models.ImageField(blank=True, null=True, upload_to='cms/destinos/', verbose_name='Imagen Destacada')),
                ('mejor_epoca_viajar', models.CharField(blank=True, max_length=255, verbose_name='Mejor Época para Viajar')),
                ('atracciones_principales', models.TextField(blank=True, help_text='Separar por comas o un punto por línea.', verbose_name='Atracciones Principales (lista)')),
                ('estado', models.CharField(choices=[('PUB', 'Publicado'), ('BOR', 'Borrador'), ('ARC', 'Archivado')], default='BOR', max_length=3, verbose_name='Estado')),
                ('meta_titulo', models.CharField(blank=True, max_length=255, verbose_name='Meta Título (SEO)')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='Meta Descripción (SEO)')),
                ('pais_ubicacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pais', verbose_name='País de Ubicación')),
            ],
            options={
                'verbose_name': 'Destino CMS',
                'verbose_name_plural': 'Destinos CMS',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='ciudad',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.pais', verbose_name='País'),
        ),
        migrations.CreateModel(
            name='PaqueteTuristicoCMS',
            fields=[
                ('id_paquete_cms', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Paquete CMS')),
                ('titulo', models.CharField(max_length=255, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Título del Paquete')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('descripcion_corta', models.TextField(blank=True, verbose_name='Descripción Corta')),
                ('itinerario_detallado', models.TextField(blank=True, verbose_name='Itinerario Detallado')),
                ('duracion_dias', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Duración (días)')),
                ('precio_desde_texto', models.CharField(blank=True, help_text='Ej: $1,200 p/p base doble', max_length=100, verbose_name='Precio Desde (texto)')),
                ('precio_numerico', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Precio Numérico (para filtros)')),
                ('incluye', models.TextField(blank=True, verbose_name='Qué Incluye el Paquete')),
                ('no_incluye', models.TextField(blank=True, verbose_name='Qué NO Incluye el Paquete')),
                ('imagen_destacada', models.ImageField(blank=True, null=True, upload_to='cms/paquetes/', verbose_name='Imagen Destacada')),
                ('fecha_validez_inicio', models.DateField(blank=True, null=True, verbose_name='Válido Desde')),
                ('fecha_validez_fin', models.DateField(blank=True, null=True, verbose_name='Válido Hasta')),
                ('estado', models.CharField(choices=[('ACT', 'Activo'), ('INA', 'Inactivo'), ('AGO', 'Agotado'), ('BOR', 'Borrador')], default='BOR', max_length=3, verbose_name='Estado del Paquete')),
                ('es_destacado', models.BooleanField(default=False, help_text='Mostrar en la página principal o secciones destacadas.', verbose_name='Paquete Destacado')),
                ('meta_titulo', models.CharField(blank=True, max_length=255, verbose_name='Meta Título (SEO)')),
                ('meta_descripcion', models.TextField(blank=True, verbose_name='Meta Descripción (SEO)')),
                ('destino_principal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.destinocms', verbose_name='Destino Principal')),
                ('moneda_paquete', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.moneda', verbose_name='Moneda del Paquete')),
            ],
            options={
                'verbose_name': 'Paquete Turístico CMS',
                'verbose_name_plural': 'Paquetes Turísticos CMS',
                'ordering': ['-es_destacado', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='MenuItemCMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='Título del Enlace')),
                ('url_enlace', models.CharField(blank=True, help_text='Dejar vacío si se enlaza a contenido interno.', max_length=255, verbose_name='URL (si es externa o manual)')),
                ('orden', models.PositiveIntegerField(default=0, verbose_name='Orden de Aparición')),
                ('abrir_en_nueva_pestana', models.BooleanField(default=False, verbose_name='Abrir en Nueva Pestaña')),
                ('ubicacion', models.CharField(choices=[('NAV_PRINCIPAL', 'Navegación Principal'), ('FOOTER_1', 'Pie de Página (Columna 1)'), ('FOOTER_2', 'Pie de Página (Columna 2)'), ('OTRO', 'Otra Ubicación')], db_index=True, default='NAV_PRINCIPAL', max_length=20, verbose_name='Ubicación del Menú')),
                ('destino_enlazado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.destinocms', verbose_name='Destino CMS Enlazado')),
                ('menu_padre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_items', to='core.menuitemcms', verbose_name='Item Padre (para submenús)')),
                ('pagina_enlazada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.paginacms', verbose_name='Página CMS Enlazada')),
                ('paquete_enlazado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.paqueteturisticocms', verbose_name='Paquete CMS Enlazado')),
            ],
            options={
                'verbose_name': 'Item de Menú CMS',
                'verbose_name_plural': 'Items de Menú CMS',
                'ordering': ['ubicacion', 'orden', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='PlanContable',
            fields=[
                ('id_cuenta', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Cuenta')),
                ('codigo_cuenta', models.CharField(max_length=30, unique=True, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Código de Cuenta')),
                ('nombre_cuenta', models.CharField(max_length=100, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombre de la Cuenta')),
                ('tipo_cuenta', models.CharField(choices=[('AC', 'Activo'), ('PA', 'Pasivo'), ('PT', 'Patrimonio'), ('IN', 'Ingreso'), ('GA', 'Gasto/Costo'), ('CO', 'Cuenta de Orden')], max_length=2, verbose_name='Tipo de Cuenta')),
                ('nivel', models.PositiveSmallIntegerField(default=1, verbose_name='Nivel Jerárquico')),
                ('permite_movimientos', models.BooleanField(default=True, help_text='Si es False, es una cuenta de agrupación.', verbose_name='Permite Movimientos')),
                ('naturaleza', models.CharField(choices=[('D', 'Deudora'), ('H', 'Acreedora')], max_length=1, verbose_name='Naturaleza')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('cuenta_padre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcuentas', to='core.plancontable', verbose_name='Cuenta Padre')),
            ],
            options={
                'verbose_name': 'Cuenta Contable',
                'verbose_name_plural': 'Plan de Cuentas',
                'ordering': ['codigo_cuenta'],
            },
        ),
        migrations.CreateModel(
            name='ProductoServicio',
            fields=[
                ('id_producto_servicio', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Producto/Servicio')),
                ('codigo_interno', models.CharField(blank=True, help_text='Código interno de la agencia para este producto/servicio.', max_length=50, null=True, unique=True, verbose_name='Código Interno')),
                ('nombre', models.CharField(max_length=255, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombre del Producto/Servicio')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('tipo_producto', models.CharField(choices=[('AIR', 'Boleto Aéreo'), ('HTL', 'Alojamiento (Hotel)'), ('PKG', 'Paquete Turístico'), ('TOU', 'Tour o Actividad'), ('TRF', 'Traslado'), ('INS', 'Seguro de Viaje'), ('CRU', 'Crucero'), ('CAR', 'Alquiler de Auto'), ('SVC', 'Servicio Adicional'), ('OTR', 'Otro')], default='OTR', max_length=3, verbose_name='Tipo de Producto/Servicio')),
                ('costo_estandar_referencial', models.DecimalField(blank=True, decimal_places=2, help_text='Costo aproximado para la agencia.', max_digits=12, null=True, verbose_name='Costo Estándar Referencial')),
                ('precio_venta_sugerido', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Precio de Venta Sugerido')),
                ('activo', models.BooleanField(default=True, help_text='Indica si este producto/servicio está actualmente ofrecido.', verbose_name='Activo')),
                ('requiere_datos_pasajero_especificos', models.BooleanField(default=False, help_text='Ej. para boletos aéreos, seguros.', verbose_name='Requiere Datos Específicos del Pasajero')),
                ('moneda_referencial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.moneda', verbose_name='Moneda Referencial')),
            ],
            options={
                'verbose_name': 'Producto o Servicio',
                'verbose_name_plural': 'Productos y Servicios',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ItemCotizacion',
            fields=[
                ('id_item_cotizacion', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Item Cotización')),
                ('descripcion_personalizada', models.CharField(blank=True, help_text='Si se desea una descripción diferente a la del catálogo.', max_length=500, null=True, verbose_name='Descripción Personalizada')),
                ('cantidad', models.PositiveIntegerField(default=1, verbose_name='Cantidad')),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Precio Unitario')),
                ('impuestos_item', models.DecimalField(decimal_places=2, default=0, help_text='Impuestos aplicables a este item específico por unidad.', max_digits=12, verbose_name='Impuestos por Item')),
                ('subtotal_item', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Subtotal Item')),
                ('total_item', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Total Item')),
                ('cotizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_cotizacion', to='core.cotizacion', verbose_name='Cotización')),
                ('producto_servicio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.productoservicio', verbose_name='Producto/Servicio')),
            ],
            options={
                'verbose_name': 'Item de Cotización',
                'verbose_name_plural': 'Items de Cotización',
                'ordering': ['id_item_cotizacion'],
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id_proveedor', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Proveedor')),
                ('nombre', models.CharField(max_length=150, unique=True, validators=[core.models.validar_no_vacio_o_espacios], verbose_name='Nombre del Proveedor')),
                ('tipo_proveedor', models.CharField(choices=[('AER', 'Aerolínea'), ('HTL', 'Hotel'), ('OPT', 'Operador Turístico'), ('CON', 'Consolidador'), ('MAY', 'Mayorista'), ('SEG', 'Seguros'), ('TRN', 'Transporte Terrestre'), ('GDS', 'Sistema de Distribución Global (GDS)'), ('OTR', 'Otro')], default='OTR', max_length=3, verbose_name='Tipo de Proveedor')),
                ('nivel_proveedor', models.CharField(choices=[('DIR', 'Directo'), ('CON', 'Consolidador'), ('MAY', 'Mayorista'), ('TER', 'Otro (Tercero)')], default='DIR', help_text='Nivel de intermediación del proveedor.', max_length=3, verbose_name='Nivel del Proveedor')),
                ('contacto_nombre', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre de Contacto')),
                ('contacto_email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email de Contacto')),
                ('contacto_telefono', models.CharField(blank=True, max_length=30, null=True, verbose_name='Teléfono de Contacto')),
                ('direccion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dirección')),
                ('notas', models.TextField(blank=True, null=True, verbose_name='Notas sobre el Proveedor')),
                ('numero_cuenta_agencia', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de Cuenta/IATA con el Proveedor')),
                ('condiciones_pago', models.CharField(blank=True, max_length=100, null=True, verbose_name='Condiciones de Pago')),
                ('datos_bancarios', models.TextField(blank=True, null=True, verbose_name='Datos Bancarios del Proveedor')),
                ('activo', models.BooleanField(default=True, help_text='Indica si el proveedor está actualmente activo.', verbose_name='Activo')),
                ('ciudad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ciudad', verbose_name='Ciudad')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='productoservicio',
            name='proveedor_principal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.proveedor', verbose_name='Proveedor Principal/Preferido'),
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id_venta', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Venta/Reserva')),
                ('numero_venta', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número de Venta/Reserva')),
                ('fecha_venta', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Venta/Reserva')),
                ('descripcion_general', models.TextField(blank=True, null=True, verbose_name='Descripción General de la Venta')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Subtotal')),
                ('impuestos', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Impuestos')),
                ('total_venta', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=12, verbose_name='Total Venta')),
                ('monto_pagado', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Monto Pagado')),
                ('saldo_pendiente', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=12, verbose_name='Saldo Pendiente')),
                ('estado', models.CharField(choices=[('PEN', 'Pendiente de Pago'), ('PAR', 'Pagada Parcialmente'), ('PAG', 'Pagada Totalmente'), ('CNF', 'Confirmada (Servicios OK)'), ('VIA', 'En Proceso/Viaje'), ('COM', 'Completada'), ('CAN', 'Cancelada')], default='PEN', max_length=3, verbose_name='Estado de la Venta/Reserva')),
                ('notas', models.TextField(blank=True, null=True, verbose_name='Notas de la Venta')),
                ('asiento_contable_venta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ventas_asociadas', to='core.asientocontable', verbose_name='Asiento Contable de Venta')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.cliente', verbose_name='Cliente')),
                ('cotizacion_origen', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cotizacion', verbose_name='Cotización de Origen')),
                ('moneda', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.moneda', verbose_name='Moneda')),
            ],
            options={
                'verbose_name': 'Venta / Reserva',
                'verbose_name_plural': 'Ventas / Reservas',
                'ordering': ['-fecha_venta'],
            },
        ),
        migrations.CreateModel(
            name='ItemVenta',
            fields=[
                ('id_item_venta', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Item Venta')),
                ('descripcion_personalizada', models.CharField(blank=True, max_length=500, null=True, verbose_name='Descripción Personalizada')),
                ('cantidad', models.PositiveIntegerField(default=1, verbose_name='Cantidad')),
                ('precio_unitario_venta', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Precio Unitario de Venta')),
                ('costo_unitario_referencial', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Costo Unitario Referencial')),
                ('impuestos_item_venta', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Impuestos por Item')),
                ('subtotal_item_venta', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Subtotal Item')),
                ('total_item_venta', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Total Item')),
                ('fecha_inicio_servicio', models.DateTimeField(blank=True, null=True, verbose_name='Fecha Inicio Servicio')),
                ('fecha_fin_servicio', models.DateTimeField(blank=True, null=True, verbose_name='Fecha Fin Servicio')),
                ('codigo_reserva_proveedor', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código Reserva Proveedor (PNR, Localizador)')),
                ('estado_item', models.CharField(choices=[('PCO', 'Pendiente Confirmación Proveedor'), ('CNF', 'Confirmado por Proveedor'), ('CAP', 'Cancelado por Proveedor'), ('CAC', 'Cancelado por Cliente'), ('UTI', 'Utilizado/Completado')], default='PCO', max_length=3, verbose_name='Estado del Item/Servicio')),
                ('notas_item', models.TextField(blank=True, null=True, verbose_name='Notas del Item')),
                ('producto_servicio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.productoservicio', verbose_name='Producto/Servicio')),
                ('proveedor_servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.proveedor', verbose_name='Proveedor del Servicio')),
                ('venta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_venta', to='core.venta', verbose_name='Venta')),
            ],
            options={
                'verbose_name': 'Item de Venta/Reserva',
                'verbose_name_plural': 'Items de Venta/Reserva',
            },
        ),
        migrations.AddField(
            model_name='factura',
            name='venta_asociada',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='facturas', to='core.venta', verbose_name='Venta/Reserva Asociada'),
        ),
        migrations.CreateModel(
            name='BoletoImportado',
            fields=[
                ('id_boleto_importado', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Boleto Importado')),
                ('archivo_boleto', models.FileField(help_text='Suba el archivo del boleto en formato PDF, TXT o EML.', upload_to='boletos_importados/%Y/%m/', verbose_name='Archivo del Boleto (.pdf, .txt, .eml)')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Subida')),
                ('formato_detectado', models.CharField(blank=True, choices=[('PDF_KIU', 'PDF (KIU)'), ('PDF_SAB', 'PDF (Sabre)'), ('PDF_AMA', 'PDF (Amadeus)'), ('TXT_KIU', 'TXT (KIU)'), ('TXT_SAB', 'TXT (Sabre)'), ('TXT_AMA', 'TXT (Amadeus)'), ('EML_KIU', 'EML (KIU)'), ('EML_GEN', 'EML (General)'), ('OTR', 'Otro/Desconocido'), ('ERR', 'Error de Formato')], default='OTR', max_length=10, verbose_name='Formato Detectado')),
                ('datos_parseados', models.JSONField(blank=True, help_text='Información extraída del boleto en formato JSON.', null=True, verbose_name='Datos Parseados')),
                ('estado_parseo', models.CharField(choices=[('PEN', 'Pendiente de Parseo'), ('PRO', 'En Proceso'), ('COM', 'Parseo Completado'), ('ERR', 'Error en Parseo'), ('NAP', 'No Aplica Parseo')], default='PEN', max_length=3, verbose_name='Estado del Parseo')),
                ('log_parseo', models.TextField(blank=True, null=True, verbose_name='Log del Parseo')),
                ('numero_boleto', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de Boleto')),
                ('nombre_pasajero_completo', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre Completo Pasajero (Original)')),
                ('nombre_pasajero_procesado', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre Pasajero (Procesado)')),
                ('ruta_vuelo', models.TextField(blank=True, null=True, verbose_name='Ruta del Vuelo (Itinerario)')),
                ('fecha_emision_boleto', models.DateField(blank=True, null=True, verbose_name='Fecha de Emisión del Boleto')),
                ('aerolinea_emisora', models.CharField(blank=True, max_length=100, null=True, verbose_name='Aerolínea Emisora')),
                ('direccion_aerolinea', models.TextField(blank=True, null=True, verbose_name='Dirección Aerolínea')),
                ('agente_emisor', models.CharField(blank=True, max_length=100, null=True, verbose_name='Agente Emisor')),
                ('foid_pasajero', models.CharField(blank=True, max_length=50, null=True, verbose_name='FOID/D.Identidad Pasajero')),
                ('localizador_pnr', models.CharField(blank=True, max_length=10, null=True, verbose_name='Localizador (PNR)')),
                ('tarifa_base', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tarifa Base')),
                ('impuestos_descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción Impuestos')),
                ('impuestos_total_calculado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Impuestos (Calculado)')),
                ('total_boleto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total del Boleto')),
                ('venta_asociada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='boletos_importados', to='core.venta', verbose_name='Venta/Reserva Asociada')),
            ],
            options={
                'verbose_name': 'Boleto Importado',
                'verbose_name_plural': 'Boletos Importados',
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='ciudad',
            unique_together={('nombre', 'pais', 'region_estado')},
        ),
        migrations.CreateModel(
            name='DetalleAsiento',
            fields=[
                ('id_detalle_asiento', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Detalle Asiento')),
                ('linea', models.PositiveSmallIntegerField(help_text='Número de línea dentro del asiento.', verbose_name='Línea')),
                ('debe', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Debe')),
                ('haber', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Haber')),
                ('descripcion_linea', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descripción de la Línea')),
                ('asiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles_asiento', to='core.asientocontable', verbose_name='Asiento Contable')),
                ('cuenta_contable', models.ForeignKey(limit_choices_to={'permite_movimientos': True}, on_delete=django.db.models.deletion.PROTECT, to='core.plancontable', verbose_name='Cuenta Contable')),
            ],
            options={
                'verbose_name': 'Detalle de Asiento',
                'verbose_name_plural': 'Detalles de Asientos',
                'ordering': ['asiento', 'linea'],
                'unique_together': {('asiento', 'linea')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='productoservicio',
            unique_together={('nombre', 'tipo_producto', 'proveedor_principal')},
        ),
        migrations.CreateModel(
            name='TipoCambio',
            fields=[
                ('id_tipo_cambio', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Tipo de Cambio')),
                ('fecha_efectiva', models.DateField(default=django.utils.timezone.now, help_text='Fecha en que esta tasa de cambio entra en vigor.', verbose_name='Fecha Efectiva')),
                ('tasa_conversion', models.DecimalField(decimal_places=8, help_text='Cuánto de la moneda destino equivale a 1 unidad de la moneda origen.', max_digits=18, verbose_name='Tasa de Conversión')),
                ('moneda_destino', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tipos_cambio_destino', to='core.moneda', verbose_name='Moneda Destino')),
                ('moneda_origen', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tipos_cambio_origen', to='core.moneda', verbose_name='Moneda Origen')),
            ],
            options={
                'verbose_name': 'Tipo de Cambio',
                'verbose_name_plural': 'Tipos de Cambio',
                'ordering': ['-fecha_efectiva', 'moneda_origen__codigo_iso'],
                'unique_together': {('moneda_origen', 'moneda_destino', 'fecha_efectiva')},
            },
        ),
    ]

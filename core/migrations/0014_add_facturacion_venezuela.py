# Generated by Django 5.2.6 on 2025-10-06 21:20

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0013_pasaporteescaneado"),
    ]

    operations = [
        migrations.CreateModel(
            name="FacturaVenezuela",
            fields=[
                (
                    "factura_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.factura",
                    ),
                ),
                (
                    "numero_control",
                    models.CharField(
                        blank=True,
                        help_text="Número asignado por imprenta digital autorizada",
                        max_length=50,
                        verbose_name="Número de Control Fiscal",
                    ),
                ),
                (
                    "modalidad_emision",
                    models.CharField(
                        choices=[
                            ("DIGITAL", "Digital"),
                            ("CONTINGENCIA_FISICA", "Contingencia Física"),
                        ],
                        default="DIGITAL",
                        max_length=20,
                        verbose_name="Modalidad de Emisión",
                    ),
                ),
                (
                    "firma_digital",
                    models.TextField(
                        blank=True,
                        help_text="Firma electrónica con certificado digital válido",
                        null=True,
                        verbose_name="Firma Digital",
                    ),
                ),
                (
                    "emisor_rif",
                    models.CharField(max_length=20, verbose_name="RIF Emisor"),
                ),
                (
                    "emisor_razon_social",
                    models.CharField(
                        max_length=200, verbose_name="Razón Social Emisor"
                    ),
                ),
                (
                    "emisor_direccion_fiscal",
                    models.TextField(verbose_name="Dirección Fiscal Emisor"),
                ),
                (
                    "es_sujeto_pasivo_especial",
                    models.BooleanField(
                        default=False,
                        help_text="Determina obligaciones como agente de percepción IGTF",
                        verbose_name="Es Sujeto Pasivo Especial",
                    ),
                ),
                (
                    "esta_inscrita_rtn",
                    models.BooleanField(
                        default=False,
                        help_text="Registro Turístico Nacional",
                        verbose_name="Inscrita en RTN",
                    ),
                ),
                (
                    "cliente_es_residente",
                    models.BooleanField(
                        default=True,
                        help_text="Determina si aplica exportación de servicios (alícuota 0%)",
                        verbose_name="Cliente es Residente",
                    ),
                ),
                (
                    "cliente_identificacion",
                    models.CharField(
                        help_text="Cédula, RIF o Pasaporte",
                        max_length=50,
                        verbose_name="Identificación Cliente",
                    ),
                ),
                (
                    "cliente_direccion",
                    models.TextField(blank=True, verbose_name="Dirección Cliente"),
                ),
                (
                    "tipo_operacion",
                    models.CharField(
                        choices=[
                            ("VENTA_PROPIA", "Venta Propia"),
                            ("INTERMEDIACION", "Intermediación"),
                        ],
                        help_text="Determina tratamiento fiscal (Art. 10 Ley IVA)",
                        max_length=20,
                        verbose_name="Tipo de Operación",
                    ),
                ),
                (
                    "moneda_operacion",
                    models.CharField(
                        choices=[("BOLIVAR", "Bolívar"), ("DIVISA", "Divisa")],
                        help_text="Moneda en que se pacta y cobra la operación",
                        max_length=10,
                        verbose_name="Moneda de Operación",
                    ),
                ),
                (
                    "tasa_cambio_bcv",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Tasa oficial BCV del día de la operación",
                        max_digits=12,
                        null=True,
                        verbose_name="Tasa de Cambio BCV",
                    ),
                ),
                (
                    "subtotal_base_gravada",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Servicios gravados con alícuota general",
                        max_digits=12,
                        verbose_name="Base Gravada 16%",
                    ),
                ),
                (
                    "subtotal_exento",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Servicios exentos (ej: transporte aéreo nacional)",
                        max_digits=12,
                        verbose_name="Base Exenta",
                    ),
                ),
                (
                    "subtotal_exportacion",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Servicios a no residentes (turismo receptivo)",
                        max_digits=12,
                        verbose_name="Base Exportación 0%",
                    ),
                ),
                (
                    "monto_iva_16",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="IVA 16%",
                    ),
                ),
                (
                    "monto_iva_adicional",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Alícuota adicional 5-25% sobre exentos pagados en divisas",
                        max_digits=12,
                        verbose_name="IVA Adicional Divisas",
                    ),
                ),
                (
                    "monto_igtf",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Impuesto a Grandes Transacciones Financieras",
                        max_digits=12,
                        verbose_name="IGTF 3%",
                    ),
                ),
                (
                    "tercero_rif",
                    models.CharField(
                        blank=True,
                        help_text="RIF de la aerolínea u otro proveedor",
                        max_length=20,
                        verbose_name="RIF Tercero",
                    ),
                ),
                (
                    "tercero_razon_social",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Razón Social Tercero"
                    ),
                ),
                (
                    "subtotal_base_gravada_bs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="Base Gravada Bs",
                    ),
                ),
                (
                    "subtotal_exento_bs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="Base Exenta Bs",
                    ),
                ),
                (
                    "monto_iva_16_bs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="IVA 16% Bs",
                    ),
                ),
                (
                    "monto_igtf_bs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="IGTF Bs",
                    ),
                ),
                (
                    "monto_total_bs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="Total Bs",
                    ),
                ),
            ],
            options={
                "verbose_name": "Factura Venezuela",
                "verbose_name_plural": "Facturas Venezuela",
                "ordering": ["-fecha_emision", "-numero_factura"],
            },
            bases=("core.factura",),
        ),
        migrations.CreateModel(
            name="ItemFacturaVenezuela",
            fields=[
                (
                    "itemfactura_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.itemfactura",
                    ),
                ),
                (
                    "tipo_servicio",
                    models.CharField(
                        choices=[
                            ("COMISION_INTERMEDIACION", "Comisión Intermediación"),
                            ("TRANSPORTE_AEREO_NACIONAL", "Transporte Aéreo Nacional"),
                            (
                                "ALOJAMIENTO_Y_OTROS_GRAVADOS",
                                "Alojamiento y Otros Gravados",
                            ),
                            ("SERVICIO_EXPORTACION", "Servicio Exportación"),
                        ],
                        default="ALOJAMIENTO_Y_OTROS_GRAVADOS",
                        help_text="Determina tratamiento fiscal del item",
                        max_length=30,
                        verbose_name="Tipo de Servicio",
                    ),
                ),
                (
                    "es_gravado",
                    models.BooleanField(
                        default=True,
                        help_text="Si aplica IVA al item",
                        verbose_name="Es Gravado",
                    ),
                ),
                (
                    "alicuota_iva",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("16.00"),
                        help_text="Porcentaje de IVA aplicable",
                        max_digits=5,
                        verbose_name="Alícuota IVA",
                    ),
                ),
                (
                    "nombre_pasajero",
                    models.CharField(
                        blank=True,
                        help_text="Obligatorio para boletos aéreos",
                        max_length=200,
                        verbose_name="Nombre Pasajero",
                    ),
                ),
                (
                    "numero_boleto",
                    models.CharField(
                        blank=True,
                        help_text="Número del boleto de pasaje",
                        max_length=50,
                        verbose_name="Número Boleto",
                    ),
                ),
                (
                    "itinerario",
                    models.TextField(
                        blank=True,
                        help_text="Ruta del viaje (ej: CCS-MIA-CCS)",
                        verbose_name="Itinerario",
                    ),
                ),
                (
                    "codigo_aerolinea",
                    models.CharField(
                        blank=True,
                        help_text="Código IATA de la aerolínea",
                        max_length=10,
                        verbose_name="Código Aerolínea",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item Factura Venezuela",
                "verbose_name_plural": "Items Factura Venezuela",
            },
            bases=("core.itemfactura",),
        ),
        migrations.CreateModel(
            name="DocumentoExportacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_documento",
                    models.CharField(
                        choices=[
                            ("PASAPORTE", "Pasaporte"),
                            ("COMPROBANTE_PAGO", "Comprobante Pago Internacional"),
                            ("OTRO", "Otro"),
                        ],
                        max_length=20,
                        verbose_name="Tipo Documento",
                    ),
                ),
                (
                    "numero_documento",
                    models.CharField(max_length=100, verbose_name="Número Documento"),
                ),
                (
                    "archivo",
                    models.FileField(
                        upload_to="documentos_exportacion/%Y/%m/",
                        verbose_name="Archivo",
                    ),
                ),
                ("fecha_subida", models.DateTimeField(auto_now_add=True)),
                (
                    "factura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documentos_exportacion",
                        to="core.facturavenezuela",
                    ),
                ),
            ],
            options={
                "verbose_name": "Documento Exportación",
                "verbose_name_plural": "Documentos Exportación",
            },
        ),
    ]

# Generated by Django 5.2.6 on 2025-10-24 15:57

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0023_add_imprenta_digital_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name='RetencionISLR',
            fields=[
                ('id_retencion', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Retención')),
                ('numero_comprobante', models.CharField(help_text='Número del comprobante de retención', max_length=50, unique=True, verbose_name='Número de Comprobante')),
                ('fecha_emision', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Emisión')),
                ('fecha_operacion', models.DateField(help_text='Fecha de la factura retenida', verbose_name='Fecha de Operación')),
                ('periodo_fiscal', models.CharField(help_text='Formato: YYYY-MM', max_length=7, verbose_name='Período Fiscal')),
                ('tipo_operacion', models.CharField(choices=[('HP', 'Honorarios Profesionales'), ('SNM', 'Servicios No Mercantiles'), ('CM', 'Comisiones Mercantiles'), ('OT', 'Otros')], default='CM', max_length=3, verbose_name='Tipo de Operación')),
                ('codigo_concepto', models.CharField(blank=True, help_text='Ej: 03-04 para comisiones', max_length=10, verbose_name='Código Concepto SENIAT')),
                ('base_imponible', models.DecimalField(decimal_places=2, help_text='Monto sobre el cual se calcula la retención', max_digits=12, verbose_name='Base Imponible')),
                ('porcentaje_retencion', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Porcentaje aplicado (ej: 5.00)', max_digits=5, verbose_name='Porcentaje de Retención')),
                ('monto_retenido', models.DecimalField(decimal_places=2, help_text='Monto efectivamente retenido', max_digits=12, verbose_name='Monto Retenido')),
                ('estado', models.CharField(choices=[('PEN', 'Pendiente'), ('APL', 'Aplicada en Declaración'), ('ANU', 'Anulada')], default='PEN', max_length=3, verbose_name='Estado')),
                ('archivo_comprobante', models.FileField(blank=True, help_text='PDF del comprobante de retención', null=True, upload_to='retenciones_islr/%Y/%m/', verbose_name='Archivo Comprobante')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='personas.cliente', verbose_name='Cliente (Agente de Retención)')),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='retenciones_islr', to='core.facturaconsolidada', verbose_name='Factura')),
            ],
            options={
                'verbose_name': 'Retención ISLR',
                'verbose_name_plural': 'Retenciones ISLR',
                'ordering': ['-fecha_emision', '-numero_comprobante'],
                'indexes': [
                    models.Index(fields=['periodo_fiscal'], name='core_retenc_periodo_idx'),
                    models.Index(fields=['estado'], name='core_retenc_estado_idx'),
                    models.Index(fields=['cliente', 'fecha_emision'], name='core_retenc_cliente_idx'),
                ],
            },
        ),
        migrations.AlterModelOptions(
            name="facturaconsolidada",
            options={
                "ordering": ["-fecha_emision", "-numero_factura"],
                "verbose_name": "Factura de Cliente",
                "verbose_name_plural": "Facturas de Clientes",
            },
        ),
        migrations.AlterModelOptions(
            name="itemfacturaconsolidada",
            options={
                "verbose_name": "Item de Factura",
                "verbose_name_plural": "Items de Factura",
            },
        ),
    ]
